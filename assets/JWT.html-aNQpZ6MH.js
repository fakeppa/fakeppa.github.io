import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,b as a,o as l}from"./app-CKTKuuIF.js";const r={};function n(s,e){return l(),i("div",null,e[0]||(e[0]=[a('<h1 id="_00-前言" tabindex="-1"><a class="header-anchor" href="#_00-前言"><span>00. 前言</span></a></h1><p>现在，正视JWT，系统地了解什么是JWT</p><h2 id="_01-head包含的字段" tabindex="-1"><a class="header-anchor" href="#_01-head包含的字段"><span>01. Head包含的字段</span></a></h2><ol><li><strong>alg</strong>: 指定用于签名的算法，例如 <code>HS256</code>、<code>RS256</code> 等。这是一个必需字段。</li><li><strong>typ</strong>: 指定令牌的类型，通常为 <code>JWT</code>。这个字段是可选的，但通常会包含。</li><li><strong>kid</strong>: 指定密钥的标识符，用于在使用多个密钥时帮助接收方选择正确的密钥进行验证。这个字段是可选的。</li><li><strong>jku</strong>: 指定一个 URL，指向一个包含公钥的 JSON Web Key Set（JWKS）。这个字段也是可选的。</li><li><strong>x5u</strong>: 指向一个 X.509 证书的 URL，用于验证签名。这个字段是可选的。</li><li><strong>x5c</strong>: 包含一个 X.509 证书链的数组，用于验证签名。这个字段是可选的。</li><li><strong>x5t</strong>: 指定 X.509 证书的指纹，用于验证签名。这个字段是可选的。</li><li><strong>cty</strong>: 指定内容类型，通常用于嵌套 JWT。这个字段是可选的。</li></ol><p>这些字段共同构成了 JWT 的头部部分，通常以 JSON 格式表示，并在 JWT 的编码过程中进行 Base64Url 编码。JWT 的结构通常是由三部分组成：头部（Header）、载荷（Payload）和签名（Signature）。</p><h2 id="_02-payload包含字段" tabindex="-1"><a class="header-anchor" href="#_02-payload包含字段"><span>02. payload包含字段</span></a></h2><h3 id="_1-注册声明-registered-claims" tabindex="-1"><a class="header-anchor" href="#_1-注册声明-registered-claims"><span>1. 注册声明（Registered Claims）</span></a></h3><p>这些是预定义的字段，建议使用但不是必需的。常见的注册声明包括：</p><ul><li><strong>iss</strong> (Issuer): 发行者的标识，通常是一个 URL 或者一个字符串，表示谁发行了这个 JWT。</li><li><strong>sub</strong> (Subject): 主题，表示这个 JWT 的主体，通常是用户的唯一标识符。</li><li><strong>aud</strong> (Audience): 接收者，表示这个 JWT 的目标受众，通常是一个或多个接收者的标识符。</li><li><strong>exp</strong> (Expiration Time): 过期时间，表示这个 JWT 的有效期，通常是一个 Unix 时间戳。</li><li><strong>nbf</strong> (Not Before): 不可用时间，表示在这个时间之前，JWT 不应被接受。</li><li><strong>iat</strong> (Issued At): 签发时间，表示 JWT 被签发的时间。</li><li><strong>jti</strong> (JWT ID): JWT 的唯一标识符，通常用于防止重放攻击。</li></ul><h3 id="_2-公共声明-public-claims" tabindex="-1"><a class="header-anchor" href="#_2-公共声明-public-claims"><span>2. 公共声明（Public Claims）</span></a></h3><p>这些是可以自定义的声明，通常用于共享信息。为了避免冲突，建议使用 URI 作为命名空间。例如：</p><ul><li><strong>name</strong>: 用户的姓名。</li><li><strong>email</strong>: 用户的电子邮件地址。</li></ul><h3 id="_3-私有声明-private-claims" tabindex="-1"><a class="header-anchor" href="#_3-私有声明-private-claims"><span>3. 私有声明（Private Claims）</span></a></h3><p>这些是自定义的声明，通常用于特定应用程序之间的信息交换。私有声明没有预定义的名称，通常是应用程序特定的。例如：</p><ul><li><strong>role</strong>: 用户的角色（如管理员、用户等）。</li><li><strong>permissions</strong>: 用户的权限列表。</li></ul><h2 id="_03-signature包含的字段" tabindex="-1"><a class="header-anchor" href="#_03-signature包含的字段"><span>03. Signature包含的字段</span></a></h2><p>此部分不包含字段，只是一个经过加密的字符串，加密算法在头部指定</p><h3 id="构造jwt流程" tabindex="-1"><a class="header-anchor" href="#构造jwt流程"><span>构造JWT流程</span></a></h3><ol><li>将头部金和载荷进行base64和url编码，随后将头部和载荷连接起来，之后对</li></ol>',19)]))}const c=t(r,[["render",n],["__file","JWT.html.vue"]]),d=JSON.parse('{"path":"/article/03_%E8%B5%84%E6%BA%90/JWT.html","title":"JWT","lang":"zh-CN","frontmatter":{"icon":"pen-to-square","date":"2024-12-20T00:00:00.000Z","tags":null,"title":"JWT","category":["资源"],"description":"00. 前言 现在，正视JWT，系统地了解什么是JWT 01. Head包含的字段 alg: 指定用于签名的算法，例如 HS256、RS256 等。这是一个必需字段。 typ: 指定令牌的类型，通常为 JWT。这个字段是可选的，但通常会包含。 kid: 指定密钥的标识符，用于在使用多个密钥时帮助接收方选择正确的密钥进行验证。这个字段是可选的。 jku:...","head":[["meta",{"property":"og:url","content":"https://github.com/fakeppa/fakeppa.github.io/article/03_%E8%B5%84%E6%BA%90/JWT.html"}],["meta",{"property":"og:site_name","content":"问己"}],["meta",{"property":"og:title","content":"JWT"}],["meta",{"property":"og:description","content":"00. 前言 现在，正视JWT，系统地了解什么是JWT 01. Head包含的字段 alg: 指定用于签名的算法，例如 HS256、RS256 等。这是一个必需字段。 typ: 指定令牌的类型，通常为 JWT。这个字段是可选的，但通常会包含。 kid: 指定密钥的标识符，用于在使用多个密钥时帮助接收方选择正确的密钥进行验证。这个字段是可选的。 jku:..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-01-10T15:24:52.000Z"}],["meta",{"property":"article:published_time","content":"2024-12-20T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-01-10T15:24:52.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"JWT\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-12-20T00:00:00.000Z\\",\\"dateModified\\":\\"2025-01-10T15:24:52.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"fakeppa\\",\\"url\\":\\"https://github.com/fakeppa/fakeppa.github.io\\"}]}"]]},"headers":[{"level":2,"title":"01. Head包含的字段","slug":"_01-head包含的字段","link":"#_01-head包含的字段","children":[]},{"level":2,"title":"02. payload包含字段","slug":"_02-payload包含字段","link":"#_02-payload包含字段","children":[{"level":3,"title":"1. 注册声明（Registered Claims）","slug":"_1-注册声明-registered-claims","link":"#_1-注册声明-registered-claims","children":[]},{"level":3,"title":"2. 公共声明（Public Claims）","slug":"_2-公共声明-public-claims","link":"#_2-公共声明-public-claims","children":[]},{"level":3,"title":"3. 私有声明（Private Claims）","slug":"_3-私有声明-private-claims","link":"#_3-私有声明-private-claims","children":[]}]},{"level":2,"title":"03. Signature包含的字段","slug":"_03-signature包含的字段","link":"#_03-signature包含的字段","children":[{"level":3,"title":"构造JWT流程","slug":"构造jwt流程","link":"#构造jwt流程","children":[]}]}],"git":{"createdTime":1734692350000,"updatedTime":1736522692000,"contributors":[{"name":"fakeppa","username":"fakeppa","email":"l17091799155@qq.com","commits":399,"url":"https://github.com/fakeppa"}]},"readingTime":{"minutes":2.47,"words":740},"filePathRelative":"article/03_资源/JWT.md","localizedDate":"2024年12月20日","excerpt":"\\n<p>现在，正视JWT，系统地了解什么是JWT</p>\\n<h2>01. Head包含的字段</h2>\\n<ol>\\n<li><strong>alg</strong>: 指定用于签名的算法，例如&nbsp;<code>HS256</code>、<code>RS256</code>&nbsp;等。这是一个必需字段。</li>\\n<li><strong>typ</strong>: 指定令牌的类型，通常为&nbsp;<code>JWT</code>。这个字段是可选的，但通常会包含。</li>\\n<li><strong>kid</strong>: 指定密钥的标识符，用于在使用多个密钥时帮助接收方选择正确的密钥进行验证。这个字段是可选的。</li>\\n<li><strong>jku</strong>: 指定一个 URL，指向一个包含公钥的 JSON Web Key Set（JWKS）。这个字段也是可选的。</li>\\n<li><strong>x5u</strong>: 指向一个 X.509 证书的 URL，用于验证签名。这个字段是可选的。</li>\\n<li><strong>x5c</strong>: 包含一个 X.509 证书链的数组，用于验证签名。这个字段是可选的。</li>\\n<li><strong>x5t</strong>: 指定 X.509 证书的指纹，用于验证签名。这个字段是可选的。</li>\\n<li><strong>cty</strong>: 指定内容类型，通常用于嵌套 JWT。这个字段是可选的。</li>\\n</ol>","autoDesc":true}');export{c as comp,d as data};
