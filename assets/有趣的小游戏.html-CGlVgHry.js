import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,b as g,o as p}from"./app-CK8HJuhY.js";const n={};function i(l,e){return p(),a("div",null,e[0]||(e[0]=[g('<p>这么多金币，谁吃得完？我！<br> 经过字符串搜索，以及其他基本操作后，没有发现flag，我们直接开始动态调试<br> 既然是一个小游戏，那么我们直接上cheat engine，查找变化的金币数值<br><img src="https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20250513214814.png" alt="image.png" loading="lazy"><br> 然后找到了对应地址，直接修改1000金币<br> 但是成功后会出现乱码而并非flag，我们先吃几个金币再修改到1000，收集一下出现的乱码<br><img src="https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20250513215011.png" alt="image.png" loading="lazy"><br> 我们可以发现，先吃不同金币数量后修改到1000通关游戏获得的的结果不一样，意味着，可能需要金币从0到1000的过程，也代表着flag被一步步解密的过程，那么，目标明确了我们要从0金币吃到1000金币<br> 我们直接查找哪个汇编代码改写了此处的数值(F6)，再吃一个金币可以被监听到，经过尝试可知，不吃金币时并不会检测到对于金币数量的改写<br><img src="https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20250513215318.png" alt="image.png" loading="lazy"></p><p>然后我们来到x64dbg对此地址的代码进行进一步调试<br><img src="https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20250513221454.png" alt="image.png" loading="lazy"><br> 发现最顶上有一步je，那么我们反着来，把je改成jne，就会造成跳转条件的相反，也就是说，不需要吃到金币就会使金币数量增加<br><img src="https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20250513222915.png" alt="image.png" loading="lazy"><br><img src="https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20250513222318.png" alt="image.png" loading="lazy"><br> 事实如此，我们可以猜测原逻辑，先判断是否吃掉金币，然后消除P所在的金币，然后再在任意位置生成一个金币，结果就会变成这样<br><img src="https://cdn.jsdelivr.net/gh/fakeppa/blog-img/e6c7db1719f27a6f4f0f76f68b5266c.jpg" alt="e6c7db1719f27a6f4f0f76f68b5266c.jpg" loading="lazy"><br> 我们现在每移动一步就会使得金币+1，有一个小技巧可以快速增加金币<br><img src="https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20250513222437.png" alt="image.png" loading="lazy"><br> 复制粘贴这样，然后enter会原地移动，并且快速增加金币，增加到900左右可以停下来了，因为金币数最后必须精准处于1000，否则都不会获得flag<br> 接下来需要一点操作才能获得flag，我们先把之前位置修改的jne改为je，也就是改回正常逻辑，接下来我们精准控制金币在1000的时候吃掉E获得flag！<br><img src="https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20250513222954.png" alt="image.png" loading="lazy"></p>',2)]))}const m=t(n,[["render",i],["__file","有趣的小游戏.html.vue"]]),c=JSON.parse('{"path":"/article/01_%E9%A1%B9%E7%9B%AE/ISCC/%E6%9C%89%E8%B6%A3%E7%9A%84%E5%B0%8F%E6%B8%B8%E6%88%8F.html","title":"有趣的小游戏","lang":"zh-CN","frontmatter":{"icon":"pen-to-square","date":"2025-05-13T00:00:00.000Z","tags":null,"title":"有趣的小游戏","category":["项目"],"description":"这么多金币，谁吃得完？我！ 经过字符串搜索，以及其他基本操作后，没有发现flag，我们直接开始动态调试 既然是一个小游戏，那么我们直接上cheat engine，查找变化的金币数值 image.png 然后找到了对应地址，直接修改1000金币 但是成功后会出现乱码而并非flag，我们先吃几个金币再修改到1000，收集一下出现的乱码 image.png ...","head":[["meta",{"property":"og:url","content":"https://github.com/fakeppa/fakeppa.github.io/article/01_%E9%A1%B9%E7%9B%AE/ISCC/%E6%9C%89%E8%B6%A3%E7%9A%84%E5%B0%8F%E6%B8%B8%E6%88%8F.html"}],["meta",{"property":"og:site_name","content":"问己"}],["meta",{"property":"og:title","content":"有趣的小游戏"}],["meta",{"property":"og:description","content":"这么多金币，谁吃得完？我！ 经过字符串搜索，以及其他基本操作后，没有发现flag，我们直接开始动态调试 既然是一个小游戏，那么我们直接上cheat engine，查找变化的金币数值 image.png 然后找到了对应地址，直接修改1000金币 但是成功后会出现乱码而并非flag，我们先吃几个金币再修改到1000，收集一下出现的乱码 image.png ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20250513214814.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-06-27T05:27:44.000Z"}],["meta",{"property":"article:published_time","content":"2025-05-13T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-27T05:27:44.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"有趣的小游戏\\",\\"image\\":[\\"https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20250513214814.png\\",\\"https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20250513215011.png\\",\\"https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20250513215318.png\\",\\"https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20250513221454.png\\",\\"https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20250513222915.png\\",\\"https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20250513222318.png\\",\\"https://cdn.jsdelivr.net/gh/fakeppa/blog-img/e6c7db1719f27a6f4f0f76f68b5266c.jpg\\",\\"https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20250513222437.png\\",\\"https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20250513222954.png\\"],\\"datePublished\\":\\"2025-05-13T00:00:00.000Z\\",\\"dateModified\\":\\"2025-06-27T05:27:44.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"fakeppa\\",\\"url\\":\\"https://github.com/fakeppa/fakeppa.github.io\\"}]}"]]},"headers":[],"git":{"createdTime":1747144607000,"updatedTime":1751002064000,"contributors":[{"name":"fakeppa","username":"fakeppa","email":"l17091799155@qq.com","commits":120,"url":"https://github.com/fakeppa"}]},"readingTime":{"minutes":1.96,"words":587},"filePathRelative":"article/01_项目/ISCC/有趣的小游戏.md","localizedDate":"2025年5月13日","excerpt":"<p>这么多金币，谁吃得完？我！<br>\\n经过字符串搜索，以及其他基本操作后，没有发现flag，我们直接开始动态调试<br>\\n既然是一个小游戏，那么我们直接上cheat engine，查找变化的金币数值<br>\\n<img src=\\"https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20250513214814.png\\" alt=\\"image.png\\" loading=\\"lazy\\"><br>\\n然后找到了对应地址，直接修改1000金币<br>\\n但是成功后会出现乱码而并非flag，我们先吃几个金币再修改到1000，收集一下出现的乱码<br>\\n<img src=\\"https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20250513215011.png\\" alt=\\"image.png\\" loading=\\"lazy\\"><br>\\n我们可以发现，先吃不同金币数量后修改到1000通关游戏获得的的结果不一样，意味着，可能需要金币从0到1000的过程，也代表着flag被一步步解密的过程，那么，目标明确了我们要从0金币吃到1000金币<br>\\n我们直接查找哪个汇编代码改写了此处的数值(F6)，再吃一个金币可以被监听到，经过尝试可知，不吃金币时并不会检测到对于金币数量的改写<br>\\n<img src=\\"https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20250513215318.png\\" alt=\\"image.png\\" loading=\\"lazy\\"></p>","autoDesc":true}');export{m as comp,c as data};
