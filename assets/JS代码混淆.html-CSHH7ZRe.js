import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,b as n,o as p}from"./app-Cjjq3YGj.js";const g={};function i(r,e){return p(),t("div",null,e[0]||(e[0]=[n('<p><em>包含了几种JS代码混淆技术</em></p><h1 id="_1-十六进制字符串编码" tabindex="-1"><a class="header-anchor" href="#_1-十六进制字符串编码"><span>1. 十六进制字符串编码</span></a></h1><p><img src="https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20241221140010.png" alt="image.png" loading="lazy"><br><em>很好理解</em></p><h1 id="_2-死代码注入" tabindex="-1"><a class="header-anchor" href="#_2-死代码注入"><span>2. 死代码注入</span></a></h1><p>这句话<br><img src="https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20241221140138.png" alt="image.png" loading="lazy"><br> 用了github上的DfendJS包<br> 变成了<br><img src="https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20241221140202.png" alt="image.png" loading="lazy"></p><h1 id="_3-mangling-代码撕裂" tabindex="-1"><a class="header-anchor" href="#_3-mangling-代码撕裂"><span>3. Mangling(代码撕裂)</span></a></h1><p>依旧是hello world<br><img src="https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20241221140457.png" alt="image.png" loading="lazy"><br> 把每一个部分进行拆分，用新的变量代替，最后再组合起来</p><h1 id="_4-代码缩小" tabindex="-1"><a class="header-anchor" href="#_4-代码缩小"><span>4. 代码缩小</span></a></h1><p>从代码包删除所有空格、空行、缩进、注释的技术</p><h1 id="_5-js-fuck" tabindex="-1"><a class="header-anchor" href="#_5-js-fuck"><span>5.<a href="http://www.jsfuck.com" target="_blank" rel="noopener noreferrer">js fuck</a></span></a></h1><p>将js代码转换为类似于Brainfuck编程语言深奥风格的方法<br><img src="https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20241221140947.png" alt="image.png" loading="lazy"></p>',11)]))}const s=a(g,[["render",i],["__file","JS代码混淆.html.vue"]]),m=JSON.parse('{"path":"/article/03_%E8%B5%84%E6%BA%90/JS%E4%BB%A3%E7%A0%81%E6%B7%B7%E6%B7%86.html","title":"JS代码混淆","lang":"zh-CN","frontmatter":{"icon":"pen-to-square","date":"2024-12-21T00:00:00.000Z","tags":null,"title":"JS代码混淆","category":["资源"],"description":"包含了几种JS代码混淆技术 1. 十六进制字符串编码 image.png 很好理解 2. 死代码注入 这句话 image.png 用了github上的DfendJS包 变成了 image.png 3. Mangling(代码撕裂) 依旧是hello world image.png 把每一个部分进行拆分，用新的变量代替，最后再组合起来 4. 代码缩小 从...","head":[["meta",{"property":"og:url","content":"https://github.com/fakeppa/fakeppa.github.io/article/03_%E8%B5%84%E6%BA%90/JS%E4%BB%A3%E7%A0%81%E6%B7%B7%E6%B7%86.html"}],["meta",{"property":"og:site_name","content":"问己"}],["meta",{"property":"og:title","content":"JS代码混淆"}],["meta",{"property":"og:description","content":"包含了几种JS代码混淆技术 1. 十六进制字符串编码 image.png 很好理解 2. 死代码注入 这句话 image.png 用了github上的DfendJS包 变成了 image.png 3. Mangling(代码撕裂) 依旧是hello world image.png 把每一个部分进行拆分，用新的变量代替，最后再组合起来 4. 代码缩小 从..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20241221140010.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-28T07:08:47.000Z"}],["meta",{"property":"article:published_time","content":"2024-12-21T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-02-28T07:08:47.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"JS代码混淆\\",\\"image\\":[\\"https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20241221140010.png\\",\\"https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20241221140138.png\\",\\"https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20241221140202.png\\",\\"https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20241221140457.png\\",\\"https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20241221140947.png\\"],\\"datePublished\\":\\"2024-12-21T00:00:00.000Z\\",\\"dateModified\\":\\"2025-02-28T07:08:47.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"fakeppa\\",\\"url\\":\\"https://github.com/fakeppa/fakeppa.github.io\\"}]}"]]},"headers":[],"git":{"createdTime":1735300058000,"updatedTime":1740726527000,"contributors":[{"name":"fakeppa","username":"fakeppa","email":"l17091799155@qq.com","commits":339,"url":"https://github.com/fakeppa"}]},"readingTime":{"minutes":0.56,"words":169},"filePathRelative":"article/03_资源/JS代码混淆.md","localizedDate":"2024年12月21日","excerpt":"<p><em>包含了几种JS代码混淆技术</em></p>\\n<h1>1. 十六进制字符串编码</h1>\\n<p><img src=\\"https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20241221140010.png\\" alt=\\"image.png\\" loading=\\"lazy\\"><br>\\n<em>很好理解</em></p>\\n<h1>2. 死代码注入</h1>\\n<p>这句话<br>\\n<img src=\\"https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20241221140138.png\\" alt=\\"image.png\\" loading=\\"lazy\\"><br>\\n用了github上的DfendJS包<br>\\n变成了<br>\\n<img src=\\"https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20241221140202.png\\" alt=\\"image.png\\" loading=\\"lazy\\"></p>","autoDesc":true}');export{s as comp,m as data};
