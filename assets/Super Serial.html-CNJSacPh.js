import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,b as a,o as s}from"./app-CXyH_vM6.js";const p={};function n(r,e){return s(),t("div",null,e[0]||(e[0]=[a('<h1 id="super-serial" tabindex="-1"><a class="header-anchor" href="#super-serial"><span>Super Serial</span></a></h1><p>Author: madStacks</p><h4 id="description" tabindex="-1"><a class="header-anchor" href="#description"><span>Description</span></a></h4><p>Try to recover the flag stored on this website <a href="http://mercury.picoctf.net:8404/" target="_blank" rel="noopener noreferrer">http://mercury.picoctf.net:8404/</a></p><h4 id="hints" tabindex="-1"><a class="header-anchor" href="#hints"><span>Hints</span></a></h4><p>The flag is at ../flag</p><hr><h2 id="_01-代码审计" tabindex="-1"><a class="header-anchor" href="#_01-代码审计"><span>01. 代码审计</span></a></h2><p>首先进入robots.txt的网页查看，发现admin.phps这样一段话<br><img src="https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20241219204250.png" alt="image.png" loading="lazy"><br> 访问后发现不存在<br><img src="https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20241219204334.png" alt="image.png" loading="lazy"><br> 但是将登录页index.php改为index.phps发现可以看到源代码(也就是所谓的“php script”,是一种嵌入html的php脚本)<br><img src="https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20241219205640.png" alt="image.png" loading="lazy"><br> 在这页有很多关键代码：</p><ol><li>导入了cookie.php，以及提到了会重定向到authentication.php页面</li><li><mark>发现了产生cookie的逻辑</mark>，这非常关键，当验证通过的时候会产生一个经过url和base64编码的序列化字符串cookie</li></ol><p>在authentication.phps代码中，发现了<br><img src="https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20241219205005.png" alt="image.png" loading="lazy"><br> 分析代码后可以发现，赋给$log_file路径就可以读取服务器文件</p><p>在cookie.phps中发现了<br><img src="https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20241219210714.png" alt="image.png" loading="lazy"><br> 这会读取当前的cookie值<br><img src="https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20241219210507.png" alt="image.png" loading="lazy"><br> 这串代码会反序列化cookie并在die()函数中进行打印，这时候便可以执行函数</p><p>回看authentication.phps<br><img src="https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20241219211019.png" alt="image.png" loading="lazy"><br> 又发现了$perm变量的判断，所以authentication.php页面就是整个漏洞的入口</p><h2 id="_02-构造cookie" tabindex="-1"><a class="header-anchor" href="#_02-构造cookie"><span>02. 构造cookie</span></a></h2><p>我们已经了解了cookie的构造方法</p><div class="language-php line-numbers-mode" data-highlighter="shiki" data-ext="php" data-title="php" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">setcookie</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;login&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> urlencode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">base64_encode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">serialize</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$perm_res</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">))),</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> time</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> +</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">86400</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> *</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 30</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">),</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;/&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>进入php沙箱</p><p>构造一恶意序列化cookie，调用access_log类，并赋上flag路径../flag<br><img src="https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20241219211636.png" alt="image.png" loading="lazy"></p><p>用新的cookie值创建一个名为login的cookie，并赋值<code>TzoxMDoiYWNjZXNzX2xvZyI6MTp7czo4OiJsb2dfZmlsZSI7czo3OiIuLi9mbGFnIjt9</code></p><p>设置cookie的适用范围，随后进入authentication.php页面进行刷新即可<br><img src="https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20241219211852.png" alt="image.png" loading="lazy"><br> 这样就可以看到被外带打印出来的access_log类的对象</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>picoCTF{th15_vu1n_1s_5up3r_53r1ous_y4ll_66832978}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>',21)]))}const o=i(p,[["render",n],["__file","Super Serial.html.vue"]]),g=JSON.parse('{"path":"/article/02_%E9%A2%86%E5%9F%9F/picoCTF/web/Super%20Serial.html","title":"Super Serial","lang":"zh-CN","frontmatter":{"icon":"pen-to-square","date":"2024-12-19T00:00:00.000Z","tags":null,"title":"Super Serial","category":["领域"],"description":"Super Serial Author: madStacks Description Try to recover the flag stored on this website http://mercury.picoctf.net:8404/ Hints The flag is at ../flag 01. 代码审计 首先进入robots.txt的网...","head":[["meta",{"property":"og:url","content":"https://github.com/fakeppa/fakeppa.github.io/article/02_%E9%A2%86%E5%9F%9F/picoCTF/web/Super%20Serial.html"}],["meta",{"property":"og:site_name","content":"问己"}],["meta",{"property":"og:title","content":"Super Serial"}],["meta",{"property":"og:description","content":"Super Serial Author: madStacks Description Try to recover the flag stored on this website http://mercury.picoctf.net:8404/ Hints The flag is at ../flag 01. 代码审计 首先进入robots.txt的网..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20241219204250.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-10-31T13:08:09.000Z"}],["meta",{"property":"article:published_time","content":"2024-12-19T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-10-31T13:08:09.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Super Serial\\",\\"image\\":[\\"https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20241219204250.png\\",\\"https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20241219204334.png\\",\\"https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20241219205640.png\\",\\"https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20241219205005.png\\",\\"https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20241219210714.png\\",\\"https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20241219210507.png\\",\\"https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20241219211019.png\\",\\"https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20241219211636.png\\",\\"https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20241219211852.png\\"],\\"datePublished\\":\\"2024-12-19T00:00:00.000Z\\",\\"dateModified\\":\\"2025-10-31T13:08:09.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"fakeppa\\",\\"url\\":\\"https://github.com/fakeppa/fakeppa.github.io\\"}]}"]]},"headers":[{"level":2,"title":"01. 代码审计","slug":"_01-代码审计","link":"#_01-代码审计","children":[]},{"level":2,"title":"02. 构造cookie","slug":"_02-构造cookie","link":"#_02-构造cookie","children":[]}],"git":{"createdTime":1734936930000,"updatedTime":1761916089000,"contributors":[{"name":"fakeppa","username":"fakeppa","email":"l17091799155@qq.com","commits":1432,"url":"https://github.com/fakeppa"}]},"readingTime":{"minutes":1.45,"words":434},"filePathRelative":"article/02_领域/picoCTF/web/Super Serial.md","localizedDate":"2024年12月19日","excerpt":"\\n<p>Author:&nbsp;madStacks</p>\\n<h4>Description</h4>\\n<p>Try to recover the flag stored on this website&nbsp;<a href=\\"http://mercury.picoctf.net:8404/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">http://mercury.picoctf.net:8404/</a></p>\\n<h4>Hints</h4>\\n<p>The flag is at ../flag</p>\\n<hr>\\n<h2>01. 代码审计</h2>","autoDesc":true}');export{o as comp,g as data};
