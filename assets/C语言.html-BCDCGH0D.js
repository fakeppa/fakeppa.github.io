import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,b as n,o as l}from"./app-BtNk6c1N.js";const h={};function e(k,s){return l(),a("div",null,s[0]||(s[0]=[n(`<p><strong>学C</strong></p><h2 id="混淆编译" tabindex="-1"><a class="header-anchor" href="#混淆编译"><span>混淆编译</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">g++</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -O2</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -s</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -fno-stack-protector</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -fomit-frame-pointer</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -DNDEBUG</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -static-libgcc</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -static-libstdc++</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;-Wl,--strip-all,--disable-stdcall-fixup&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> .</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\E</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">ncryption.c</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -o</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> .</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\E</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">ncryption.exe</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="函数流程" tabindex="-1"><a class="header-anchor" href="#函数流程"><span>函数流程</span></a></h2><h2 id="windows-操作系统架构基础​" tabindex="-1"><a class="header-anchor" href="#windows-操作系统架构基础​"><span><strong>Windows 操作系统架构基础​</strong></span></a></h2><h3 id="完整编译过程及参与的-器-​​" tabindex="-1"><a class="header-anchor" href="#完整编译过程及参与的-器-​​"><span><strong>完整编译过程及参与的“器”​</strong>​</span></a></h3><ol><li><p>​<strong>​预处理器（Preprocessor）​</strong>​</p><ul><li><p>​<strong>​输入​</strong>​：源代码（如 <code>.c</code>, <code>.cpp</code>）。</p></li><li><p>​<strong>​功能​</strong>​：</p><ul><li><p>展开宏（<code>#define</code>）</p></li><li><p>处理条件编译（<code>#ifdef</code>, <code>#endif</code>）</p></li><li><p>包含头文件（<code>#include</code>）</p></li></ul></li><li><p>​<strong>​输出​</strong>​：预处理后的纯代码（无注释、宏已展开）。</p></li></ul></li><li><p>​<strong>​编译器（Compiler）​</strong>​</p><ul><li><p>​<strong>​输入​</strong>​：预处理后的代码。</p></li><li><p>​<strong>​功能​</strong>​：</p><ul><li><p>语法/语义分析（生成抽象语法树）</p></li><li><p>优化（如常量折叠、死代码消除）</p></li><li><p>​<strong>​生成汇编代码​</strong>​（与CPU架构相关）。</p></li></ul></li><li><p>​<strong>​输出​</strong>​：汇编语言文件（如 <code>.s</code>）。</p></li></ul></li><li><p>​<strong>​汇编器（Assembler）​</strong>​</p><ul><li><p>​<strong>​输入​</strong>​：汇编代码文件（<code>.s</code>）。</p></li><li><p>​<strong>​功能​</strong>​：</p><ul><li><p>将汇编指令逐行翻译为​<strong>​机器码​</strong>​（二进制）。</p></li><li><p>生成​<strong>​可重定位目标文件​</strong>​（<code>.o</code>或 <code>.obj</code>）。</p></li></ul></li><li><p>​<strong>​输出​</strong>​：目标文件（含机器码、未解析符号表）。</p></li></ul></li><li><p>​<strong>​链接器（Linker）​</strong>​</p><ul><li><p>​<strong>​输入​</strong>​：多个目标文件（<code>.o</code>） + 库文件（<code>.a</code>或 <code>.so</code>）。</p></li><li><p>​<strong>​功能​</strong>​：</p><ul><li><p>​<strong>​符号解析​</strong>​：匹配函数/变量的引用与定义（如 <code>printf</code>来自库）。</p></li><li><p>​<strong>​重定位​</strong>​：合并所有目标文件，分配最终内存地址。</p></li><li><p>生成​<strong>​可执行文件​</strong>​（如 <code>a.out</code>或 <code>.exe</code>）。</p></li></ul></li><li><p>​<strong>​输出​</strong>​：完整的可执行程序。<br> 细节补充:</p><ul><li>链接器分为静态和动态链接，静态地址可以进行相对地址寻址</li><li>静态链接很少，动态链接应用较多</li><li>由于windows的ALSR机制存在，库地址每次启动程序都会变化，故只能绝对寻址</li><li>如果要自定义函数，除了直接写到源码里，进行静态编译，还可以把这些内容编译为dll，在需要时按需加载，进行动态寻址</li></ul></li></ul></li></ol><div class="language-txt line-numbers-mode" data-highlighter="shiki" data-ext="txt" data-title="txt" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>源代码 (.c) </span></span>
<span class="line"><span>   → [预处理器] → 展开后的代码 </span></span>
<span class="line"><span>   → [编译器]    → 汇编代码 (.s) </span></span>
<span class="line"><span>   → [汇编器]    → 目标文件 (.o) </span></span>
<span class="line"><span>   → [链接器]    → 可执行文件 (a.out)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="关于动态的-操作系统生成的-用于描述进程的数据结构-peb和teb" tabindex="-1"><a class="header-anchor" href="#关于动态的-操作系统生成的-用于描述进程的数据结构-peb和teb"><span>关于动态的，操作系统生成的，用于描述进程的数据结构--PEB和TEB</span></a></h3><p>PEB/TEB在内存中的位置</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">高地址</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (0x7FFFFFFF)  // 32位进程示例</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">+---------------------------------------+</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> ----</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|                                       |  </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">^</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|               </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">内核空间</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                 |  |  </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">//</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 禁止访问</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (Inaccessible)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|                                       |  |</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">+</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">=======================================+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">---</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 用户/内核空间分界线</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (e.g., </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0x80000000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|                                       |  |</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|        </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">用户空间共享数据页</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">              |  |  </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">//</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 所有进程共享的只读数据，如系统时间、性能计数器</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|    (</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">KUSER_SHARED_DATA,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 固定地址</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)        |  |</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|                                       |  |</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">+---------------------------------------+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  |</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|                                       |  |</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|                </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">栈</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (Stack)             |  |  </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">//</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 用于函数调用，向下增长</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (↓)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|                 (</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">↓</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> grows</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> down</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)         |  |</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|                                       |  |      </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">+-----------------------+</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|                                       |  |      |        </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">TEB</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            |</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">+---------------------------------------+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  |      </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">+-----------------------+</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|                 </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">TEB</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 数组</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">               |  |      | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">-</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Stack</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Base</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (栈底)   | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">//</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 线程的栈信息在这里</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|   (</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">TEB</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> for</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> additional</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> threads,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> if</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> any</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)|  |      | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">-</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Stack</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Limit</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (栈顶)  |</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|                                       |  |      | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">-</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Ptr</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> to</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> PEB</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">          | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">---+</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">+---------------------------------------+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  |      | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">-</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Thread</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ID</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">           |    |</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|                </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">环境块</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                  |  |      | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">-</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> LastError</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Value</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">     |    |</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|     (</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Process</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Environment</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Block,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> PEB</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)  |  |      </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">+-----------------------+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    |</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|                                       |  |                                  |</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|  </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">+---------------------------------+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  |  |      </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">+-----------------------+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">   |</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|  | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">PEB</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Contents:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                   |  |  |      |        </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">PEB</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            |   |</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|  | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">-</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ImageBaseAddress</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (exe </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">addr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)   |  |  |      </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">+-----------------------+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">   |</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|  | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">-</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Ldr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (Ptr </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">to</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> ---+--</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> PEB_LDR_DATA</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)|  |      | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">-</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ImageBaseAddress</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    |   |</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|  | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">-</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ProcessParameters</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (CmdLine, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">EnvVars</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)| |      | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">-</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Ldr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (Module </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">Lists</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)  |   |</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|  | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">-</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ...</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                          |  |  |      | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">-</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ProcessParameters</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">   |   |</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|  </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">+---------------------------------+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  |  |      | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">-</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ...</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                 |   |</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|                                       |  |      </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">+-----------------------+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">   |</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">+---------------------------------------+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  |                                  |</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|                </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">堆</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (Heap)              |  |                                  |</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|    (</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">默认进程堆</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> +</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 可选私有堆,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ↑</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> grows</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> up</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)  |  |                                  |</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|                                       |  |                                  |</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">+---------------------------------------+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  |                                  |</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|        </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">其他内存映射文件/区域</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            |  |  </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">//</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 例如：额外的DLL、内存映射文件</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      |</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|   (</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Memory</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Mapped</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Files,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> e.g.,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> DLLs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)    |  |                                  |</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|                                       |  |                                  |</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">+---------------------------------------+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  |                                  |</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|              </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">PE</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 映像</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (exe)            |  |  </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">//</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 您的主程序.exe文件被映射到这里</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">     |</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|   (</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Mapped</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Executable</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Image,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> .exe</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)     |  |  </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">+----------------------------+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  |</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|                                       |  |  | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">.text</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (Code, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">RX</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)          |  |</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|  </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">+---------------------------------+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  |  |  | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">.data</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (Init </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">Data,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> RW</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)    |  |</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|  | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">.text</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (Code, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">RX</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)               |  |  |  | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">.rdata</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (Const </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">Data,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> R</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)    |  |</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|  | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">.data</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (Init </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">Data,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> RW</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)          |  |  |  | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">.idata</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (Import </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">Table,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> R</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)  |  | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">//</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> **</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">关键：导入表在这里</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">**</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|  | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">.rdata</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (Const </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">Data,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> R</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)         |  |  |  | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">.reloc</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (Relocations, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">R</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)   |  | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">//</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> **</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">关键：重定位表在这里</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">**</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|  | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">.idata</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (Import </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">Table,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> R</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)       |  |  |  | </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">...</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                       |  |</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|  | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">.reloc</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (Relocations, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">R</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)        |  |  |  </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">+----------------------------+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  |</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|  | </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">...</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                            |  |  |                                  |</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|  </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">+---------------------------------+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  |  |                                  |</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|                                       |  |                                  |</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">+---------------------------------------+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  |                                  |</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|              </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">PE</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 映像</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (DLLs)           |  |  </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">//</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 所有依赖的DLL（如kernel32.dll）</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">   |</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|    (</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Mapped</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> DLL</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Images,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> .dlls</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)         |  |  </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">也被映射到类似的区域，地址随机化（ASLR）</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|                                       |  |                                  |</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|  </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">+---------------------------------+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  |  |                                  |</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|  | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">.text</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (Code, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">RX</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)               |  |  |                                  |</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|  | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">.data</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (Init </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">Data,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> RW</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)          |  |  |                                  |</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|  | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">.rdata</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (Const </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">Data,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> R</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)         |  |  |                                  |</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|  | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">.edata</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (Export </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">Table,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> R</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)       |  |  |  </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">//</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> **</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">关键：导出表在这里</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">**</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">           |</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|  | </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">...</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                            |  |  |                                  |</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|  </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">+---------------------------------+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  |  |                                  |</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|                                       |  </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">v</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">+---------------------------------------+</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> ----</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">低地址</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (0x00010000)  // 通常从0x10000开始以避免空指针访问</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="teb内容描述" tabindex="-1"><a class="header-anchor" href="#teb内容描述"><span>TEB内容描述</span></a></h3><p><strong>PEB 和 TEB 不是静态的、只读的数据结构。它们是进程和线程运行时状态的动态反映，其内容在整个生命周期内会不断被操作系统和程序本身修改。​</strong></p><h4 id="peb-的动态变化-dynamic-changes-to-the-peb" tabindex="-1"><a class="header-anchor" href="#peb-的动态变化-dynamic-changes-to-the-peb"><span>PEB 的动态变化 (Dynamic Changes to the PEB)</span></a></h4><p>PEB 中许多字段的值在进程运行时会发生改变：</p><ol><li><p>​<strong>​<code>Ldr</code>(加载器数据 - Loader Data)​</strong>​：</p><ul><li>​<strong>​这是最活跃的部分之一​</strong>​。每当进程​<strong>​动态加载​</strong>​一个新的 DLL（例如通过 <code>LoadLibrary()</code>API）或​<strong>​卸载​</strong>​一个 DLL（<code>FreeLibrary()</code>）时，操作系统加载器都会​<strong>​立即更新​</strong>​ <code>PEB-&gt;Ldr</code>所指向的模块链表。</li><li>​<strong>​新模块的 <code>LDR_DATA_TABLE_ENTRY</code>结构会被动态创建并插入到三个链表​</strong>​（<code>InLoadOrderModuleList</code>, <code>InMemoryOrderModuleList</code>, <code>InInitializationOrderModuleList</code>）中。反之，卸载时会被移除。</li><li>​<strong>​反调试和恶意软件分析​</strong>​：许多软件（包括恶意软件）会遍历这个链表来检测是否有调试器相关的DLL（如 <code>*.dll</code>）被加载，或者试图隐藏自身模块。</li></ul></li><li><p>​<strong>​<code>BeingDebugged</code>​</strong>​：</p><ul><li>这个标志位直接由调试器操作。当一个调试器（如 OllyDbg, x64dbg, WinDbg）附加到进程时，操作系统内核会​<strong>​将此标志设置为 1​</strong>​。</li><li>程序可以通过检查 <code>PEB-&gt;BeingDebugged</code>来执行​<strong>​反调试​</strong>​操作（例如，如果发现被调试就主动崩溃或改变行为）。著名的 <code>IsDebuggerPresent()</code>API 函数内部就是直接读取的这个字段。</li></ul></li><li><p>​<strong>​<code>ProcessHeap</code>​</strong>​：</p><ul><li>进程可以创建多个私有堆。虽然默认堆的句柄通常不变，但如果堆管理器因内存分配/释放而扩展或收缩堆的大小，其内部结构会变化，这些信息也可能间接反映出来。</li></ul></li><li><p>​<strong>​<code>ProcessParameters</code>中的某些字段​</strong>​：</p><ul><li>虽然命令行和环境变量通常在创建后不变，但进程完全可以调用 API 来​<strong>​动态修改​</strong>​当前目录等信息，这些更改会同步回 <code>PEB-&gt;ProcessParameters</code>。</li></ul></li></ol><h4 id="teb-的动态变化-dynamic-changes-to-the-teb" tabindex="-1"><a class="header-anchor" href="#teb-的动态变化-dynamic-changes-to-the-teb"><span>TEB 的动态变化 (Dynamic Changes to the TEB)</span></a></h4><p>TEB 的变化更加频繁，因为它与线程的执行流直接相关：</p><ol><li><p>​<strong>​<code>LastErrorValue</code>​</strong>​：</p><ul><li>​<strong>​这是变化最频繁的字段之一​</strong>​。几乎每次调用 Windows API 函数后，该值都可能被设置。<code>GetLastError()</code>这个 API 的本质就是直接返回 <code>TEB-&gt;LastErrorValue</code>的值。<code>SetLastError()</code>则是直接写入它。</li></ul></li><li><p>​<strong>​栈信息 (<code>StackBase</code>, <code>StackLimit</code>)​</strong>​：</p><ul><li>虽然栈的范围通常不会变，但随着函数调用和返回，栈指针 (<code>ESP/RSP</code>) 在不断变化。而 <code>TEB</code>本身也位于栈内存的某个区域。</li></ul></li><li><p>​<strong>​异常处理链 (<code>ExceptionList</code>)​</strong>​：</p><ul><li>每当线程进入一个 <code>__try</code>块或类似的异常处理结构时，编译器生成的代码会​<strong>​将一个异常处理记录注册（压入）到 <code>TEB-&gt;ExceptionList</code>链表中​</strong>​。离开 <code>__try</code>块时再​<strong>​解除注册（弹出）​</strong>​。这个链表在异常发生时被内核遍历，以决定由哪个处理程序来接管。</li></ul></li><li><p>​<strong>​线程本地存储 (TLS) 数组​</strong>​：</p><ul><li>线程可以通过 <code>TlsSetValue()</code>等 API 在预分配的 TLS 槽中存储数据。这些数据就存放在 TEB 的 TLS 数组里，随时可以被读写。</li></ul></li><li><p>​<strong>​<code>ArbitraryUserPointer</code>​</strong>​：</p><ul><li>这是一个可供程序自由使用的指针，任何线程都可以随时读写它，用于存储线程上下文的任意信息。</li></ul></li></ol><h4 id="谁在修改它们" tabindex="-1"><a class="header-anchor" href="#谁在修改它们"><span>谁在修改它们？</span></a></h4><ol><li><p>​<strong>​操作系统内核 (Operating System Kernel)​</strong>​：</p><ul><li>这是最主要的修改者。加载DLL、附加调试器、处理异常等核心操作都是由内核发起的，内核会代表用户模式代码更新这些结构。</li></ul></li><li><p>​<strong>​系统运行时库 (System Runtime Libraries, 如 NTDLL.dll)​</strong>​：</p><ul><li>用户模式的系统函数（如 <code>LoadLibrary</code>, <code>SetLastError</code>）在内部最终会执行修改 PEB/TEB 的代码。</li></ul></li><li><p>​<strong>​程序自身 (The Program Itself)​</strong>​：</p><ul><li>程序可以​<strong>​直接或间接​</strong>​地修改这些结构。</li><li>​<strong>​间接​</strong>​：通过调用官方API（如 <code>SetLastError</code>, <code>TlsSetValue</code>）。</li><li>​<strong>​直接​</strong>​：通过​<strong>​硬编码​</strong>​方式直接访问和修改。例如，在汇编中：</li></ul></li></ol><h4 id="关于pe-映像-所有的dll和exe都在此区域" tabindex="-1"><a class="header-anchor" href="#关于pe-映像-所有的dll和exe都在此区域"><span>关于PE 映像----所有的DLL和exe都在此区域</span></a></h4><h5 id="可执行文件格式-the-key-to-dll-loading" tabindex="-1"><a class="header-anchor" href="#可执行文件格式-the-key-to-dll-loading"><span>可执行文件格式 (The Key to DLL Loading)</span></a></h5><ul><li>​<strong>​PE 文件格式 (Portable Executable)​</strong>​: 这是理解DLL加载机制的​<strong>​最关键知识​</strong>​。DLL和EXE都是PE文件。 <ul><li><p>​<strong>​基地址（ImageBase）​</strong>​: PE文件首选的加载内存地址。</p></li><li><p>​<strong>​导入表（Import Address Table, IAT）​</strong>​: 存储这个文件需要调用的其他DLL中的函数地址。Windows加载器在加载过程中会填充这个表，这就是“动态链接”的核心。</p></li><li><p>​<strong>​导出表（Export Table）​</strong>​: 存储这个DLL向外提供的函数列表和地址。</p></li><li><p>​<strong>​重定位表（Relocation Table）​</strong>​: 如果DLL无法加载到首选基地址，需要通过这个表中的信息对代码和数据进行修正。<br> 注：地址随机化（ASLR）在此区域内进行</p></li></ul></li></ul><h5 id="windows-pe-特有的关键段" tabindex="-1"><a class="header-anchor" href="#windows-pe-特有的关键段"><span>Windows PE 特有的关键段</span></a></h5><p>这些段是 PE 格式的核心组成部分，承载了 Windows 特有的加载、链接、重定位、资源管理等功能：</p><ol><li><p>​<strong>​<code>.idata</code>(Import Directory)​</strong>​</p><ul><li><p>​<strong>​功能​</strong>​：​<strong>​导入表​</strong>​。这是 PE 文件​<strong>​最重要​</strong>​的特有段之一。</p></li><li><p>​<strong>​内容​</strong>​：描述了该模块（EXE 或 DLL）​<strong>​依赖哪些其他 DLL​</strong>​，以及需要从这些 DLL 中​<strong>​导入哪些函数​</strong>​。包含一个 <code>IMAGE_IMPORT_DESCRIPTOR</code>结构数组，每个结构对应一个依赖的 DLL，并指向该 DLL 的导入名称表 (INT) 和导入地址表 (IAT)。</p></li><li><p>​<strong>​属性​</strong>​：通常为 <code>IMAGE_SCN_CNT_INITIALIZED_DATA | IMAGE_SCN_MEM_READ</code>(只读)。</p></li><li><p>​<strong>​重要性​</strong>​：加载器根据此段加载依赖的 DLL 并填充 IAT，实现动态链接。逆向分析和破解经常需要修改此段。</p></li></ul></li><li><p>​<strong>​<code>.edata</code>(Export Directory)​</strong>​</p><ul><li><p>​<strong>​功能​</strong>​：​<strong>​导出表​</strong>​。主要用于 ​<strong>​DLL​</strong>​。</p></li><li><p>​<strong>​内容​</strong>​：描述了该 DLL ​<strong>​向其他模块提供了哪些函数或变量​</strong>​。包含一个 <code>IMAGE_EXPORT_DIRECTORY</code>结构，以及导出函数名数组、函数序号数组、函数地址数组 (EAT)。</p></li><li><p>​<strong>​属性​</strong>​：通常为 <code>IMAGE_SCN_CNT_INITIALIZED_DATA | IMAGE_SCN_MEM_READ</code>(只读)。</p></li><li><p>​<strong>​重要性​</strong>​：其他模块通过此表找到并使用该 DLL 的功能。</p></li></ul></li><li><p>​<strong>​<code>.reloc</code>(Base Relocations)​</strong>​</p><ul><li><p>​<strong>​功能​</strong>​：​<strong>​重定位表​</strong>​。对于支持 ​<strong>​ASLR​</strong>​ 或无法加载到首选基地址 (<code>ImageBase</code>) 的模块至关重要。</p></li><li><p>​<strong>​内容​</strong>​：包含一个 <code>IMAGE_BASE_RELOCATION</code>结构数组。每个结构描述了一页内存（4KB）内所有需要重定位的地址偏移量及其类型。</p></li><li><p>​<strong>​作用​</strong>​：如果模块无法加载到其 <code>ImageBase</code>，加载器会根据实际加载地址和此表中的信息，修正代码和数据中对绝对地址的引用。</p></li><li><p>​<strong>​属性​</strong>​：通常为 <code>IMAGE_SCN_CNT_INITIALIZED_DATA | IMAGE_SCN_MEM_READ | IMAGE_SCN_MEM_DISCARDABLE</code>(可读，加载后通常可丢弃)。</p></li></ul></li><li><p>​<strong>​<code>.rsrc</code>(Resource Directory)​</strong>​</p><ul><li><p>​<strong>​功能​</strong>​：​<strong>​资源段​</strong>​。存储程序的各类资源。</p></li><li><p>​<strong>​内容​</strong>​：图标、光标、位图、对话框模板、菜单、字符串表、版本信息、清单文件 (Manifest) 等。采用树形目录结构 (<code>IMAGE_RESOURCE_DIRECTORY</code>) 组织。</p></li><li><p>​<strong>​属性​</strong>​：通常为 <code>IMAGE_SCN_CNT_INITIALIZED_DATA | IMAGE_SCN_MEM_READ</code>(只读)。</p></li><li><p>​<strong>​访问​</strong>​：程序通过 <code>FindResource</code>, <code>LoadResource</code>等 API 访问这些资源。</p></li></ul></li><li><p>​<strong>​<code>.tls</code>(Thread Local Storage)​</strong>​</p><ul><li><p>​<strong>​功能​</strong>​：​<strong>​线程局部存储初始化数据​</strong>​。</p></li><li><p>​<strong>​内容​</strong>​：定义了使用 <code>__declspec(thread)</code>声明的线程局部变量的​<strong>​初始值​</strong>​和大小。</p></li><li><p>​<strong>​作用​</strong>​：当新线程创建时，系统会为每个线程分配一块 TLS 内存区域，并根据此段的内容初始化该线程的 TLS 变量。</p></li><li><p>​<strong>​属性​</strong>​：通常为 <code>IMAGE_SCN_CNT_INITIALIZED_DATA | IMAGE_SCN_MEM_READ | IMAGE_SCN_MEM_WRITE</code>(可读、可写？实际运行时每个线程有自己的副本)。</p></li></ul></li></ol><p>这是C程序编译后的内存的结构</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">高地址</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (0x7fffffffffff)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">+------------------------------+</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|                              |  </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">内核空间</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (Kernel </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">Space</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|                              |  (</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">用户程序不可访问</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">+------------------------------+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">--</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0x7fffffffffff</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (1&lt;&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">47</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> -1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">|           ...                |</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">|   环境变量 (Environment vars)  |</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">|   命令行参数 (Command-line args)|  栈顶 (初始时)</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">|                              |</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">+------------------------------+  &lt;-- 栈顶 (Stack Pointer, RSP) 向下增长</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">|           Stack              |</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">|           (向下增长 ↓)         |</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">|                              |</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">|           ...                |</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">|                              |</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">+------------------------------+</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">|           ...                |</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">|           ...                |  未映射区域 (Hole / Guard Page)</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">+------------------------------+</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">|                              |</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">|           Heap               |</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">|           (向上增长 ↑)         |</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">|                              |</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">+------------------------------+  &lt;-- 堆底 (Break, brk/sbrk 管理)</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">|           .bss               |  (未初始化/零初始化全局/静态变量)</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">+------------------------------+</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">|           .data              |  (初始化非零全局/静态变量)</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">+------------------------------+</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">|           .rodata            |  (只读数据, 如字符串常量) [可能合并到 .text]</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">+------------------------------+</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">|           .text              |  (程序代码, 只读)</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">+------------------------------+</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">|程序头部等 (ELF Header)LINUX系统|  低地址 (0x400000 附近)</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">+------------------------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>.text 是可执行代码存放的位置，<br> .rodata 是常量部分，如字符串的值<br> .data 初始化的非零，存储了键值对的内存段<br> .bss 值为0的变量区域，存储了键<br> Heap 和 stack不必多说</p><h2 id="从程序调用角度理解内存块的协调配合" tabindex="-1"><a class="header-anchor" href="#从程序调用角度理解内存块的协调配合"><span>从程序调用角度理解内存块的协调配合</span></a></h2><p>程序调用过程中的内存图解</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">高地址</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (0x7fffffffffff)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">+---------------------------------------+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|               </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">内核空间</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                 | </span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">+---------------------------------------+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">--</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0x7fffffffffff</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|                                       |</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|             </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">调用者栈帧</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (Caller)        |</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|              (</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Caller</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">&#39;s Frame)         |</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">|                                       |</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">|  +---------------------------------+  |</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">|  | 调用者局部变量 (Caller&#39;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">s</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Locals</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)  |  | &lt;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">--</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 调用者EBP</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (Caller</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;s EBP)</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">|  +---------------------------------+  |</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">|  | 参数区域 (Parameters Area)       |  |</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">|  +---------------------------------+  |</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">|                                       | </span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">+=======================================+ &lt;-- 调用者栈顶 (Caller&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">s </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">ESP</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> before</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> call</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|             </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">函数调用过程</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">               |</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|              (</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Function</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Call</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)          |</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">+---------------------------------------+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|                                       | </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|             </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">被调用函数栈帧</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">             |</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|              (</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Callee</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Frame</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)           |</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|                                       |</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|  </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">+---------------------------------+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  | </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|  | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">参数2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (Param2)                  |  | &lt;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">--</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [EBP </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">+</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 12]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|  </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">+---------------------------------+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  | </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|  | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">参数1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (Param1)                  |  | &lt;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">--</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [EBP </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">+</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 8]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|  </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">+---------------------------------+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  | </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|  | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">返回地址</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (Return </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">Address</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)        |  | &lt;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">--</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [EBP </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">+</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 4]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|  </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">+---------------------------------+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  | </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|  | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">保存的EBP</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (Saved </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">EBP</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)            |  | &lt;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">--</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> EBP</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 当前指向这里</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ★</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|  </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">+---------------------------------+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  | </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|  | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">局部变量1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (Local </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">Var1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)           |  | &lt;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">--</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [EBP </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">-</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 4]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|  </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">+---------------------------------+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  | </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|  | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">局部变量2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (Local </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">Var2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)           |  | &lt;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">--</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [EBP </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">-</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 8]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|  </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">+---------------------------------+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  | </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|  | </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">...</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (其他局部变量)               |  | &lt;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">--</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ESP</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 当前指向这里</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|  </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">+---------------------------------+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  | </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|                                       | </span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">+</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">=======================================+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">--</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 栈当前顶部</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (Current </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">ESP</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|             </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">未使用栈空间</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">               |</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|              (</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Free</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Stack</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Space</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)        |</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|                                       | </span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">+---------------------------------------+</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|             </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">堆</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (Heap)                 |</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|              (</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">向上增长</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ↑</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)               |</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">+---------------------------------------+</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|              </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">.bss</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> .data</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> .rodata</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">   |</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">+---------------------------------------+</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|              </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">.text</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (代码段)            |</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">+---------------------------------------+</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">低地址</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (0x400000)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="📌-​​函数调用流程-linux-​​" tabindex="-1"><a class="header-anchor" href="#📌-​​函数调用流程-linux-​​"><span>📌 ​<strong>​函数调用流程(linux)：​</strong>​</span></a></h3><ol><li>​<strong>​调用 (<code>call func</code>):​</strong>​<br> → 压入返回地址，跳转至 <code>func</code>代码。</li><li>​<strong>​建立新栈帧 (序言):​</strong>​<br> → <code>push ebp</code>(保存调用者栈底)<br> → <code>mov ebp, esp</code>(设置当前栈底)<br> → <code>sub esp, N</code>(为局部变量腾空间)。</li><li>​<strong>​执行函数体:​</strong>​<br> → 用 <code>[ebp + offset]</code>访问参数<br> → 用 <code>[ebp - offset]</code>访问局部变量<br> → 执行业务逻辑（.text 指令）。</li><li>​<strong>​拆除栈帧 (尾声):​</strong>​<br> → <code>mov esp, ebp</code>(丢弃局部变量)<br> → <code>pop ebp</code>(恢复调用者栈底)<br> → <code>ret</code>(弹出返回地址，跳回调用处)。</li></ol><h3 id="注意" tabindex="-1"><a class="header-anchor" href="#注意"><span>注意</span></a></h3><ul><li>参数和局部变量中间夹着返回地址，意味着当返回地址被弹出后，参数还留在栈上，需要手动清理</li></ul><h2 id="栈溢出" tabindex="-1"><a class="header-anchor" href="#栈溢出"><span>栈溢出</span></a></h2><p>32位系统示例：</p><ul><li><code>char buffer[32]</code>→ 32字节</li><li>EBP指针 → 4字节</li><li>总偏移 = 32 + 4 = 36字节<br> 64位系统示例：</li><li><code>char buffer[32]</code>→ 32字节</li><li>RBP指针 → 8字节</li><li>总偏移 = 32 + 8 = 40字节</li></ul>`,40)]))}const d=i(h,[["render",e],["__file","C语言.html.vue"]]),r=JSON.parse('{"path":"/article/04_%E5%BD%92%E6%A1%A3/C%E8%AF%AD%E8%A8%80.html","title":"C语言","lang":"zh-CN","frontmatter":{"icon":"pen-to-square","date":"2025-01-03T00:00:00.000Z","tags":null,"title":"C语言","category":["归档"],"description":"学C 混淆编译 函数流程 Windows 操作系统架构基础​ 完整编译过程及参与的“器”​​ ​​预处理器（Preprocessor）​​ ​​输入​​：源代码（如 .c, .cpp）。 ​​功能​​： 展开宏（#define） 处理条件编译（#ifdef, #endif） 包含头文件（#include） ​​输出​​：预处理后的纯代码（无注释、宏已展...","head":[["meta",{"property":"og:url","content":"https://github.com/fakeppa/fakeppa.github.io/article/04_%E5%BD%92%E6%A1%A3/C%E8%AF%AD%E8%A8%80.html"}],["meta",{"property":"og:site_name","content":"问己"}],["meta",{"property":"og:title","content":"C语言"}],["meta",{"property":"og:description","content":"学C 混淆编译 函数流程 Windows 操作系统架构基础​ 完整编译过程及参与的“器”​​ ​​预处理器（Preprocessor）​​ ​​输入​​：源代码（如 .c, .cpp）。 ​​功能​​： 展开宏（#define） 处理条件编译（#ifdef, #endif） 包含头文件（#include） ​​输出​​：预处理后的纯代码（无注释、宏已展..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-10-20T23:59:20.000Z"}],["meta",{"property":"article:published_time","content":"2025-01-03T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-10-20T23:59:20.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"C语言\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-01-03T00:00:00.000Z\\",\\"dateModified\\":\\"2025-10-20T23:59:20.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"fakeppa\\",\\"url\\":\\"https://github.com/fakeppa/fakeppa.github.io\\"}]}"]]},"headers":[{"level":2,"title":"混淆编译","slug":"混淆编译","link":"#混淆编译","children":[]},{"level":2,"title":"函数流程","slug":"函数流程","link":"#函数流程","children":[]},{"level":2,"title":"Windows 操作系统架构基础​","slug":"windows-操作系统架构基础​","link":"#windows-操作系统架构基础​","children":[{"level":3,"title":"完整编译过程及参与的“器”​​","slug":"完整编译过程及参与的-器-​​","link":"#完整编译过程及参与的-器-​​","children":[]},{"level":3,"title":"关于动态的，操作系统生成的，用于描述进程的数据结构--PEB和TEB","slug":"关于动态的-操作系统生成的-用于描述进程的数据结构-peb和teb","link":"#关于动态的-操作系统生成的-用于描述进程的数据结构-peb和teb","children":[]},{"level":3,"title":"TEB内容描述","slug":"teb内容描述","link":"#teb内容描述","children":[]}]},{"level":2,"title":"从程序调用角度理解内存块的协调配合","slug":"从程序调用角度理解内存块的协调配合","link":"#从程序调用角度理解内存块的协调配合","children":[{"level":3,"title":"📌 ​​函数调用流程(linux)：​​","slug":"📌-​​函数调用流程-linux-​​","link":"#📌-​​函数调用流程-linux-​​","children":[]},{"level":3,"title":"注意","slug":"注意","link":"#注意","children":[]}]},{"level":2,"title":"栈溢出","slug":"栈溢出","link":"#栈溢出","children":[]}],"git":{"createdTime":1752377758000,"updatedTime":1761004760000,"contributors":[{"name":"fakeppa","username":"fakeppa","email":"l17091799155@qq.com","commits":286,"url":"https://github.com/fakeppa"}]},"readingTime":{"minutes":11.1,"words":3330},"filePathRelative":"article/04_归档/C语言.md","localizedDate":"2025年1月3日","excerpt":"<p><strong>学C</strong></p>\\n<h2>混淆编译</h2>\\n<div class=\\"language-bash line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"bash\\" data-title=\\"bash\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">g++</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\"> -O2</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\"> -s</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\"> -fno-stack-protector</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\"> -fomit-frame-pointer</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\"> -DNDEBUG</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\"> -static-libgcc</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\"> -static-libstdc++</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> \\"-Wl,--strip-all,--disable-stdcall-fixup\\"</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> .</span><span style=\\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\\">\\\\E</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">ncryption.c</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\"> -o</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> .</span><span style=\\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\\">\\\\E</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">ncryption.exe</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{d as comp,r as data};
