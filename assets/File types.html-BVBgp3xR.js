import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,b as t,o as l}from"./app-DeYmuzCZ.js";const p={};function n(o,e){return l(),a("div",null,e[0]||(e[0]=[t(`<h1 id="file-types" tabindex="-1"><a class="header-anchor" href="#file-types"><span>File types</span></a></h1><p>Author: Geoffrey Njogu</p><h4 id="description" tabindex="-1"><a class="header-anchor" href="#description"><span>Description</span></a></h4><p>This file was found among some files marked confidential but my pdf reader cannot read it, maybe yours can.You can download the file from <a href="https://artifacts.picoctf.net/c/82/Flag.pdf" target="_blank" rel="noopener noreferrer">here</a>.</p><h4 id="hints" tabindex="-1"><a class="header-anchor" href="#hints"><span>Hints</span></a></h4><p>Remember that some file types can contain and nest other files</p><hr><h2 id="解题" tabindex="-1"><a class="header-anchor" href="#解题"><span>解题</span></a></h2><p>本文提供了一个pdf文件，但是打不开，尝试文本文档打开，发现似乎是一个脚本，在linux终端的脚本<br><img src="https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20241219140541.png" alt="image.png" loading="lazy"></p><ol><li>随后更改文件后缀为.sh去执行这个文件</li></ol><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>mv flag.pdf flag.sh</span></span>
<span class="line"><span>./flag.sh</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li><p>发现一个flag文件,查看文件类型发现是一个ar归档文件<br><img src="https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20241219141031.png" alt="image.png" loading="lazy"></p></li><li><p>用递归<code>ar -x file</code>去提取文件得到 <code>cpio</code> 归档文件<br><img src="https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20241219141205.png" alt="image.png" loading="lazy"></p></li><li><p>用<code>cpio -i &lt; flag</code>去提取文件,但是要先改名，之后再提取，否则会重名冲突<br><img src="https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20241219142028.png" alt="image.png" loading="lazy"></p></li><li><p>发现bzip文件,用<code>bzip2 -d flag</code>解压缩bzip文件<br><img src="https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20241219142516.png" alt="image.png" loading="lazy"></p></li><li><p>发现gzip文件flag.out<br><img src="https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20241219142652.png" alt="image.png" loading="lazy"></p></li><li><p>先把flag.out文件改为flag.gz，然后用<code>gzip -d filename.gz</code>解压gzip文件即可<br><img src="https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20241219143642.png" alt="image.png" loading="lazy"><br> 获得lzip文件</p></li><li><p>先对lzip文件进行改名，再用<code>lzip -d flag.lz</code>对文件进行提取<br><img src="https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20241219143938.png" alt="image.png" loading="lazy"><br> 获得LZ4文件</p></li><li><p>先对flag进行改名&gt;flag.lz4,然后执行<code>lz4 -dv flag.lz4</code><br><img src="https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20241219144335.png" alt="image.png" loading="lazy"><br> 获得LZMA文件</p></li><li><p>先对flag进行改名，在用<code>lzma -dv flag.lzma</code>提取lzma文件<br><img src="https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20241219144649.png" alt="image.png" loading="lazy"><br> 获得lzop文件</p></li><li><p>先对文件进行改名lzop，再用<code>lzop -d filename</code>提取文件<br><img src="https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20241219145137.png" alt="image.png" loading="lazy"><br> 获得lzip文件</p></li><li><p>先对文件进行改名lzip，再用<code>lzip -d filename</code>提取文件<br><img src="https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20241219145639.png" alt="image.png" loading="lazy"><br> 获得XZ文件</p></li><li><p>先对文件进行改名xz,然后用<code>xz -d filename</code>提取文件<br><img src="https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20241219145903.png" alt="image.png" loading="lazy"></p></li><li><p>发现ASCII text文件<br><img src="https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20241219150104.png" alt="image.png" loading="lazy"><br> 不能直接查看</p></li></ol><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> flag</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">xxd</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -r</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -d</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">original_file</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><p>:这个符号是管道符，它将前一个命令的输出作为下一个命令的输入。</p></li><li><p><strong><code>xxd -r -p</code></strong>：这个命令用于将十六进制转储还原为原始数据。</p><ul><li><code>-r</code> 选项表示 &quot;reverse&quot;，即从十六进制转储还原为原始数据。</li><li><code>-p</code> 选项表示输出格式为纯十六进制数据，没有地址偏移和ASCII表示。</li></ul></li></ul><ol start="15"><li><code>cat original_file</code>获得flag</li></ol><p><code>picoCTF{f1len@m3_m@n1pul@t10n_f0r_0b2cur17y_950c4fee}</code></p><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结：</span></a></h2><ol><li><p><strong>.sh为shell脚本</strong>：用./filename来执行脚本</p></li><li><p><strong>不需要改后缀就可以解压的</strong>：ar归档文件，cpio归档文件（这个格式的文件很特别，他会覆盖掉原本的文件，因此会产生命名冲突），bzip2文件</p></li><li><p><strong>需要改后缀才能解压的</strong>：<code>.gz</code>，<code>.lz</code>，<code>.lz4</code>，<code>.lzma</code>，<code>.lzop</code>，<code>.lzip</code>，<code>.xz</code></p></li><li><p><strong>关于解压命令</strong>：<br><code>-d</code>:<code>.gz</code>，<code>.lz</code>，<code>.lz4</code>，<code>.lzma</code>，<code>.lzop</code>，<code>.lzip</code>，<code>.xz</code>。<br><code>-x</code>:<code>ar</code><br><code>-i</code>:<code>cpio</code></p></li></ol>`,18)]))}const r=i(p,[["render",n],["__file","File types.html.vue"]]),g=JSON.parse('{"path":"/article/02_%E9%A2%86%E5%9F%9F/picoCTF/%E5%8F%96%E8%AF%81%20Forensics/File%20types.html","title":"File types","lang":"zh-CN","frontmatter":{"icon":"pen-to-square","date":"2024-12-19T00:00:00.000Z","tags":["picoCTF"],"title":"File types","category":["领域"],"description":"File types Author: Geoffrey Njogu Description This file was found among some files marked confidential but my pdf reader cannot read it, maybe yours can.You can download the fil...","head":[["meta",{"property":"og:url","content":"https://github.com/fakeppa/fakeppa.github.io/article/02_%E9%A2%86%E5%9F%9F/picoCTF/%E5%8F%96%E8%AF%81%20Forensics/File%20types.html"}],["meta",{"property":"og:site_name","content":"问己"}],["meta",{"property":"og:title","content":"File types"}],["meta",{"property":"og:description","content":"File types Author: Geoffrey Njogu Description This file was found among some files marked confidential but my pdf reader cannot read it, maybe yours can.You can download the fil..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20241219140541.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-28T11:51:58.000Z"}],["meta",{"property":"article:tag","content":"picoCTF"}],["meta",{"property":"article:published_time","content":"2024-12-19T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-02-28T11:51:58.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"File types\\",\\"image\\":[\\"https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20241219140541.png\\",\\"https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20241219141031.png\\",\\"https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20241219141205.png\\",\\"https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20241219142028.png\\",\\"https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20241219142516.png\\",\\"https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20241219142652.png\\",\\"https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20241219143642.png\\",\\"https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20241219143938.png\\",\\"https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20241219144335.png\\",\\"https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20241219144649.png\\",\\"https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20241219145137.png\\",\\"https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20241219145639.png\\",\\"https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20241219145903.png\\",\\"https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20241219150104.png\\"],\\"datePublished\\":\\"2024-12-19T00:00:00.000Z\\",\\"dateModified\\":\\"2025-02-28T11:51:58.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"fakeppa\\",\\"url\\":\\"https://github.com/fakeppa/fakeppa.github.io\\"}]}"]]},"headers":[{"level":2,"title":"解题","slug":"解题","link":"#解题","children":[]},{"level":2,"title":"总结：","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1734952038000,"updatedTime":1740743518000,"contributors":[{"name":"fakeppa","username":"fakeppa","email":"l17091799155@qq.com","commits":491,"url":"https://github.com/fakeppa"}]},"readingTime":{"minutes":2.25,"words":675},"filePathRelative":"article/02_领域/picoCTF/取证 Forensics/File types.md","localizedDate":"2024年12月19日","excerpt":"\\n<p>Author:&nbsp;Geoffrey Njogu</p>\\n<h4>Description</h4>\\n<p>This file was found among some files marked confidential but my pdf reader cannot read it, maybe yours can.You can download the file from&nbsp;<a href=\\"https://artifacts.picoctf.net/c/82/Flag.pdf\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">here</a>.</p>","autoDesc":true}');export{r as comp,g as data};
