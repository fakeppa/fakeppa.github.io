import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,b as e,o as t}from"./app-C89ADVaf.js";const h={};function n(l,s){return t(),a("div",null,s[0]||(s[0]=[e(`<p><em><strong>这是一个探索中的废案，SRS拥有更简单的部署方案</strong></em></p><h4 id="_1-安装依赖" tabindex="-1"><a class="header-anchor" href="#_1-安装依赖"><span>1. 安装依赖</span></a></h4><p>确保系统已安装必要的依赖库：</p><p>bash复制</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> apt</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> update</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> apt</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -y</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> libglib2.0-dev</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> libnice-dev</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> libssl-dev</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> libgstreamer1.0-dev</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> libgstreamer-plugins-base1.0-dev</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> libgstreamer-plugins-bad1.0-dev</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> gstreamer1.0-plugins-base</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> gstreamer1.0-plugins-good</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> gstreamer1.0-plugins-bad</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> gstreamer1.0-plugins-ugly</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> gstreamer1.0-libav</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> gstreamer1.0-tools</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> gstreamer1.0-x</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> gstreamer1.0-alsa</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> gstreamer1.0-gl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> gstreamer1.0-gtk3</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> gstreamer1.0-qt5</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> gstreamer1.0-pulseaudio</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-下载并安装-webrtc-streamer" tabindex="-1"><a class="header-anchor" href="#_2-下载并安装-webrtc-streamer"><span>2. 下载并安装 webrtc-streamer</span></a></h4><p>从 GitHub 下载预编译的二进制文件：</p><p>bash复制</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">wget</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://github.com/mpromonet/webrtc-streamer/releases/download/v0.7.0/webrtc-streamer-v0.7.0-Linux-x86_64-Release.tar.gz</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">tar</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -zxvf</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> webrtc-streamer-v0.7.0-Linux-x86_64-Release.tar.gz</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">mv</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> webrtc-streamer-v0.7.0-Linux-x86_64-Release/</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> webrtc-streamer</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">cd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> webrtc-streamer</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行程序并检查依赖是否完整：</p><p>bash复制</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">./webrtc-streamer</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>如果缺少依赖，根据提示安装，例如 <code>libX11.so.6</code>。</p><h4 id="_3-配置并启动-webrtc-streamer" tabindex="-1"><a class="header-anchor" href="#_3-配置并启动-webrtc-streamer"><span>3. 配置并启动 webrtc-streamer</span></a></h4><p>编辑配置文件（可选）或直接启动服务：</p><p>bash复制</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">./webrtc-streamer</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -H</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 0.0.0.0:8000</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>访问 <code>http://&lt;your-server-ip&gt;:8000</code>，默认会显示摄像头或桌面共享流。</p><h4 id="_4-播放-rtsp-流" tabindex="-1"><a class="header-anchor" href="#_4-播放-rtsp-流"><span>4. 播放 RTSP 流</span></a></h4><p>在浏览器中使用 WebRtcStreamer 的 JavaScript API 播放 RTSP 流：</p><p>JavaScript复制</p><div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;"> videoElement</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> document</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">getElementById</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;video&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;"> streamer</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> WebRtcStreamer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">videoElement</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;http://&lt;your-server-ip&gt;:8000&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">streamer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">connect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;rtsp://your-rtsp-stream-address&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><p>要配置视频流以便在 <code>webrtc-streamer</code> 中使用，您需要指定视频流的 URL。<code>webrtc-streamer</code> 是一个开源项目，它可以将 RTSP 流转换为 WebRTC 流，以便在浏览器中播放。以下是配置视频流的步骤：</p><ol><li><p><strong>启动 <code>webrtc-streamer</code> 服务</strong>： 使用命令行启动 <code>webrtc-streamer</code> 服务，并指定监听的 HTTP 端口。例如：</p><p>bash复制</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">./webrtc-streamer</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -H</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 0.0.0.0:8000</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>这将使服务监听在所有 IP 地址的 8000 端口上。</p></li><li><p><strong>配置视频流 URL</strong>： 您可以通过命令行参数直接指定视频流 URL，或者使用配置文件来管理多个视频流。例如，使用命令行参数指定 RTSP 流：</p><p>bash复制</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">./webrtc-streamer</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -H</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 0.0.0.0:8000</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> rtsp://your_rtsp_stream_address</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>或者，您可以创建一个 JSON 配置文件（如 <code>config.json</code>），并在其中指定视频流 URL。然后，使用 <code>-C</code> 参数加载配置文件：</p><p>bash复制</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">./webrtc-streamer</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -H</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 0.0.0.0:8000</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -C</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> config.json</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>配置文件 <code>config.json</code> 的内容可能如下所示：</p><p>JSON复制</p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;PriceCenterPlaza&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">&quot;video&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;rtsp://132.239.12.145/axis-media/media.amp&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> },</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;Waterford&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">&quot;video&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;rtsp://86.44.41.160/axis-media/media.amp&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">&quot;position&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;52.258330,-7.111940&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这样，您就可以在 <code>webrtc-streamer</code> 的 Web 界面中选择不同的视频流进行播放了。</p></li><li><p><strong>访问 <code>webrtc-streamer</code> Web 界面</strong>： 打开浏览器，访问 <code>http://localhost:8000</code> 或 <code>http://&lt;your-server-ip&gt;:8000</code>。您应该能看到 <code>webrtc-streamer</code> 的默认页面，该页面可能包含一个或多个视频流的播放选项。</p></li><li><p><strong>播放视频流</strong>： 在 <code>webrtc-streamer</code> 的 Web 界面中，点击相应的视频流链接开始播放。如果一切配置正确，视频流应该会在浏览器中播放。</p></li></ol><p>用web-simple构建网页</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">java</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -jar</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -Dserver.port=1688</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> EasyMedia-1.2.0.jar</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,27)]))}const k=i(h,[["render",n],["__file","webrtc搭建简单直播网站.html.vue"]]),d=JSON.parse('{"path":"/article/04_%E5%BD%92%E6%A1%A3/webrtc%E6%90%AD%E5%BB%BA%E7%AE%80%E5%8D%95%E7%9B%B4%E6%92%AD%E7%BD%91%E7%AB%99.html","title":"webrtc搭建简单直播网站","lang":"zh-CN","frontmatter":{"icon":"pen-to-square","date":"2025-02-15T00:00:00.000Z","tags":null,"title":"webrtc搭建简单直播网站","category":["归档"],"description":"这是一个探索中的废案，SRS拥有更简单的部署方案 1. 安装依赖 确保系统已安装必要的依赖库： bash复制 2. 下载并安装 webrtc-streamer 从 GitHub 下载预编译的二进制文件： bash复制 运行程序并检查依赖是否完整： bash复制 如果缺少依赖，根据提示安装，例如 libX11.so.6。 3. 配置并启动 webrtc-...","head":[["meta",{"property":"og:url","content":"https://github.com/fakeppa/fakeppa.github.io/article/04_%E5%BD%92%E6%A1%A3/webrtc%E6%90%AD%E5%BB%BA%E7%AE%80%E5%8D%95%E7%9B%B4%E6%92%AD%E7%BD%91%E7%AB%99.html"}],["meta",{"property":"og:site_name","content":"问己"}],["meta",{"property":"og:title","content":"webrtc搭建简单直播网站"}],["meta",{"property":"og:description","content":"这是一个探索中的废案，SRS拥有更简单的部署方案 1. 安装依赖 确保系统已安装必要的依赖库： bash复制 2. 下载并安装 webrtc-streamer 从 GitHub 下载预编译的二进制文件： bash复制 运行程序并检查依赖是否完整： bash复制 如果缺少依赖，根据提示安装，例如 libX11.so.6。 3. 配置并启动 webrtc-..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-03-06T10:00:01.000Z"}],["meta",{"property":"article:published_time","content":"2025-02-15T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-03-06T10:00:01.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"webrtc搭建简单直播网站\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-02-15T00:00:00.000Z\\",\\"dateModified\\":\\"2025-03-06T10:00:01.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"fakeppa\\",\\"url\\":\\"https://github.com/fakeppa/fakeppa.github.io\\"}]}"]]},"headers":[],"git":{"createdTime":1740732251000,"updatedTime":1741255201000,"contributors":[{"name":"fakeppa","username":"fakeppa","email":"l17091799155@qq.com","commits":101,"url":"https://github.com/fakeppa"}]},"readingTime":{"minutes":2.39,"words":717},"filePathRelative":"article/04_归档/webrtc搭建简单直播网站.md","localizedDate":"2025年2月15日","excerpt":"<p><em><strong>这是一个探索中的废案，SRS拥有更简单的部署方案</strong></em></p>\\n<h4>1. 安装依赖</h4>\\n<p>确保系统已安装必要的依赖库：</p>\\n<p>bash复制</p>\\n<div class=\\"language-bash line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"bash\\" data-title=\\"bash\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">sudo</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> apt</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> update</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">sudo</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> apt</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> install</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\"> -y</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> libglib2.0-dev</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> libnice-dev</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> libssl-dev</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> libgstreamer1.0-dev</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> libgstreamer-plugins-base1.0-dev</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> libgstreamer-plugins-bad1.0-dev</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> gstreamer1.0-plugins-base</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> gstreamer1.0-plugins-good</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> gstreamer1.0-plugins-bad</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> gstreamer1.0-plugins-ugly</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> gstreamer1.0-libav</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> gstreamer1.0-tools</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> gstreamer1.0-x</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> gstreamer1.0-alsa</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> gstreamer1.0-gl</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> gstreamer1.0-gtk3</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> gstreamer1.0-qt5</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> gstreamer1.0-pulseaudio</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{k as comp,d as data};
