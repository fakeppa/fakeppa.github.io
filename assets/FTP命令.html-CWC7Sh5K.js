import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as d,b as o,o as r}from"./app-CAJ8-fwO.js";const c={};function a(l,t){return r(),d("div",null,t[0]||(t[0]=[o('<p>FTP默认控制连接端口是21，数据连接端口为20<br> 主动模式下客户端先用任意随机端口给予服务器21控制端口进行连接，然后客户端告知服务器端所使用的端口，随后建立在端口20的数据连接<br> FTP（File Transfer Protocol）命令用于在客户端和服务器之间传输文件。以下是常用的 ​<strong>​FTP 命令​</strong>​（适用于大多数 FTP 客户端，如 <code>ftp</code>、<code>lftp</code>）：</p><hr><h2 id="​​1-连接与登录​​" tabindex="-1"><a class="header-anchor" href="#​​1-连接与登录​​"><span>​<strong>​1. 连接与登录​</strong>​</span></a></h2><table><thead><tr><th>命令</th><th>说明</th></tr></thead><tbody><tr><td><code>ftp &lt;IP地址&gt;</code></td><td>连接 FTP 服务器（如 <code>ftp 192.168.1.1</code>）</td></tr><tr><td><code>open &lt;IP地址&gt;</code></td><td>在 FTP 会话中重新连接另一个服务器</td></tr><tr><td><code>user &lt;用户名&gt;</code></td><td>重新输入用户名和密码</td></tr><tr><td><code>bye</code>/ <code>quit</code></td><td>退出 FTP 会话</td></tr></tbody></table><hr><h2 id="​​2-目录与文件操作​​" tabindex="-1"><a class="header-anchor" href="#​​2-目录与文件操作​​"><span>​<strong>​2. 目录与文件操作​</strong>​</span></a></h2><table><thead><tr><th>命令</th><th>说明</th></tr></thead><tbody><tr><td><code>ls</code>/ <code>dir</code></td><td>列出当前目录的文件和子目录</td></tr><tr><td><code>cd &lt;目录名&gt;</code></td><td>切换目录（如 <code>cd /pub</code>）</td></tr><tr><td><code>pwd</code></td><td>显示当前所在的远程目录</td></tr><tr><td><code>mkdir &lt;目录名&gt;</code></td><td>创建新目录（需权限）</td></tr><tr><td><code>rmdir &lt;目录名&gt;</code></td><td>删除空目录（需权限）</td></tr><tr><td><code>rename &lt;旧名&gt; &lt;新名&gt;</code></td><td>重命名文件（需权限）</td></tr><tr><td><code>delete &lt;文件名&gt;</code></td><td>删除文件（需权限）</td></tr><tr><td><code>mdelete &lt;文件1&gt; &lt;文件2&gt;</code></td><td>批量删除文件（需权限）</td></tr></tbody></table><hr><h2 id="​​3-文件传输​​" tabindex="-1"><a class="header-anchor" href="#​​3-文件传输​​"><span>​<strong>​3. 文件传输​</strong>​</span></a></h2><table><thead><tr><th>命令</th><th>说明</th></tr></thead><tbody><tr><td><code>get &lt;远程文件&gt;</code></td><td>下载单个文件（如 <code>get file.txt</code>）</td></tr><tr><td><code>mget &lt;文件1&gt; &lt;文件2&gt;</code></td><td>批量下载文件（支持通配符 <code>*</code>）</td></tr><tr><td><code>put &lt;本地文件&gt;</code></td><td>上传单个文件（需权限）</td></tr><tr><td><code>mput &lt;文件1&gt; &lt;文件2&gt;</code></td><td>批量上传文件（需权限）</td></tr><tr><td><code>binary</code></td><td>使用二进制模式传输（适用于图片、压缩包等）</td></tr><tr><td><code>ascii</code></td><td>使用文本模式传输（适用于 <code>.txt</code>、<code>.html</code>等）</td></tr></tbody></table><hr><h2 id="​​4-本地文件操作​​" tabindex="-1"><a class="header-anchor" href="#​​4-本地文件操作​​"><span>​<strong>​4. 本地文件操作​</strong>​</span></a></h2><table><thead><tr><th>命令</th><th>说明</th></tr></thead><tbody><tr><td><code>!ls</code>/ <code>!dir</code></td><td>列出本地当前目录的文件</td></tr><tr><td><code>lcd &lt;目录名&gt;</code></td><td>切换本地目录（如 <code>lcd /home/user</code>）</td></tr><tr><td><code>!&lt;命令&gt;</code></td><td>在本地执行 Shell 命令（如 <code>!pwd</code>）</td></tr></tbody></table><hr><h2 id="​​5-高级功能​​" tabindex="-1"><a class="header-anchor" href="#​​5-高级功能​​"><span>​<strong>​5. 高级功能​</strong>​</span></a></h2><table><thead><tr><th>命令</th><th>说明</th></tr></thead><tbody><tr><td><code>passive</code>/ <code>pasv</code></td><td>切换为被动模式（解决防火墙问题）</td></tr><tr><td><code>hash</code></td><td>显示传输进度（<code>#</code>表示传输进度）</td></tr><tr><td><code>status</code></td><td>显示当前 FTP 连接状态</td></tr><tr><td><code>help</code>/ <code>?</code></td><td>查看所有可用命令</td></tr></tbody></table><hr><h2 id="​​6-lftp额外命令​​" tabindex="-1"><a class="header-anchor" href="#​​6-lftp额外命令​​"><span>​<strong>​6. <code>lftp</code>额外命令​</strong>​</span></a></h2><p><code>lftp</code>是更强大的 FTP 客户端，支持更多功能：</p><table><thead><tr><th>命令</th><th>说明</th></tr></thead><tbody><tr><td><code>mirror &lt;远程目录&gt;</code></td><td>递归下载整个目录</td></tr><tr><td><code>mirror -R &lt;本地目录&gt;</code></td><td>递归上传整个目录</td></tr><tr><td><code>set ftp:use-feat off</code></td><td>禁用某些 FTP 扩展（解决兼容性问题）</td></tr><tr><td><code>set net:timeout 30</code></td><td>设置超时时间（秒）</td></tr></tbody></table><hr><h2 id="​​示例用法​​" tabindex="-1"><a class="header-anchor" href="#​​示例用法​​"><span>​<strong>​示例用法​</strong>​</span></a></h2><h3 id="​​1-下载文件​​" tabindex="-1"><a class="header-anchor" href="#​​1-下载文件​​"><span>​<strong>​1. 下载文件​</strong>​</span></a></h3><p><code>ftp 192.168.1.1 Name: anonymous Password: anonymous@example.com ftp&gt; ls ftp&gt; get file.txt ftp&gt; quit</code></p><h3 id="​​2-上传文件​​" tabindex="-1"><a class="header-anchor" href="#​​2-上传文件​​"><span>​<strong>​2. 上传文件​</strong>​</span></a></h3><p><code>ftp 192.168.1.1 Name: user Password: ******** ftp&gt; put local_file.txt ftp&gt; quit</code></p><h3 id="​​3-批量下载-mget-​​" tabindex="-1"><a class="header-anchor" href="#​​3-批量下载-mget-​​"><span>​<strong>​3. 批量下载（<code>mget</code>）​</strong>​</span></a></h3><p><code>ftp&gt; mget *.txt # 下载所有 .txt 文件 ftp&gt; prompt off # 关闭交互提示（避免每次确认） ftp&gt; mget *</code></p><hr><h2 id="​​常见问题​​" tabindex="-1"><a class="header-anchor" href="#​​常见问题​​"><span>​<strong>​常见问题​</strong>​</span></a></h2><h3 id="​​q1-为什么-ls或-get失败-​​" tabindex="-1"><a class="header-anchor" href="#​​q1-为什么-ls或-get失败-​​"><span>​<strong>​Q1: 为什么 <code>ls</code>或 <code>get</code>失败？​</strong>​</span></a></h3><ul><li><p>​<strong>​权限不足​</strong>​：匿名用户可能只能下载，不能上传/删除。</p></li><li><p>​<strong>​文件不存在​</strong>​：先用 <code>ls</code>确认文件名。</p></li><li><p>​<strong>​防火墙/网络问题​</strong>​：尝试 <code>passive</code>模式。</p></li></ul><h3 id="​​q2-如何递归下载整个目录-​​" tabindex="-1"><a class="header-anchor" href="#​​q2-如何递归下载整个目录-​​"><span>​<strong>​Q2: 如何递归下载整个目录？​</strong>​</span></a></h3><p>使用 <code>lftp</code>：</p><p><code>lftp -u user,pass 192.168.1.1 lftp&gt; mirror /remote_dir/ # 下载整个目录</code></p><hr><p>掌握这些命令后，你可以高效地使用 FTP 进行文件传输。如果遇到问题，可以尝试 <code>help</code>或 <code>?</code>查看服务器支持的命令。</p>',37)]))}const h=e(c,[["render",a],["__file","FTP命令.html.vue"]]),p=JSON.parse('{"path":"/article/03_%E8%B5%84%E6%BA%90/FTP%E5%91%BD%E4%BB%A4.html","title":"FTP","lang":"zh-CN","frontmatter":{"icon":"pen-to-square","date":"2025-07-11T00:00:00.000Z","tags":null,"title":"FTP","category":["资源"],"description":"FTP默认控制连接端口是21，数据连接端口为20 主动模式下客户端先用任意随机端口给予服务器21控制端口进行连接，然后客户端告知服务器端所使用的端口，随后建立在端口20的数据连接 FTP（File Transfer Protocol）命令用于在客户端和服务器之间传输文件。以下是常用的 ​​FTP 命令​​（适用于大多数 FTP 客户端，如 ftp、lf...","head":[["meta",{"property":"og:url","content":"https://github.com/fakeppa/fakeppa.github.io/article/03_%E8%B5%84%E6%BA%90/FTP%E5%91%BD%E4%BB%A4.html"}],["meta",{"property":"og:site_name","content":"问己"}],["meta",{"property":"og:title","content":"FTP"}],["meta",{"property":"og:description","content":"FTP默认控制连接端口是21，数据连接端口为20 主动模式下客户端先用任意随机端口给予服务器21控制端口进行连接，然后客户端告知服务器端所使用的端口，随后建立在端口20的数据连接 FTP（File Transfer Protocol）命令用于在客户端和服务器之间传输文件。以下是常用的 ​​FTP 命令​​（适用于大多数 FTP 客户端，如 ftp、lf..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-08-16T15:42:10.000Z"}],["meta",{"property":"article:published_time","content":"2025-07-11T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-08-16T15:42:10.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"FTP\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-07-11T00:00:00.000Z\\",\\"dateModified\\":\\"2025-08-16T15:42:10.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"fakeppa\\",\\"url\\":\\"https://github.com/fakeppa/fakeppa.github.io\\"}]}"]]},"headers":[{"level":2,"title":"​​1. 连接与登录​​","slug":"​​1-连接与登录​​","link":"#​​1-连接与登录​​","children":[]},{"level":2,"title":"​​2. 目录与文件操作​​","slug":"​​2-目录与文件操作​​","link":"#​​2-目录与文件操作​​","children":[]},{"level":2,"title":"​​3. 文件传输​​","slug":"​​3-文件传输​​","link":"#​​3-文件传输​​","children":[]},{"level":2,"title":"​​4. 本地文件操作​​","slug":"​​4-本地文件操作​​","link":"#​​4-本地文件操作​​","children":[]},{"level":2,"title":"​​5. 高级功能​​","slug":"​​5-高级功能​​","link":"#​​5-高级功能​​","children":[]},{"level":2,"title":"​​6. lftp额外命令​​","slug":"​​6-lftp额外命令​​","link":"#​​6-lftp额外命令​​","children":[]},{"level":2,"title":"​​示例用法​​","slug":"​​示例用法​​","link":"#​​示例用法​​","children":[{"level":3,"title":"​​1. 下载文件​​","slug":"​​1-下载文件​​","link":"#​​1-下载文件​​","children":[]},{"level":3,"title":"​​2. 上传文件​​","slug":"​​2-上传文件​​","link":"#​​2-上传文件​​","children":[]},{"level":3,"title":"​​3. 批量下载（mget）​​","slug":"​​3-批量下载-mget-​​","link":"#​​3-批量下载-mget-​​","children":[]}]},{"level":2,"title":"​​常见问题​​","slug":"​​常见问题​​","link":"#​​常见问题​​","children":[{"level":3,"title":"​​Q1: 为什么 ls或 get失败？​​","slug":"​​q1-为什么-ls或-get失败-​​","link":"#​​q1-为什么-ls或-get失败-​​","children":[]},{"level":3,"title":"​​Q2: 如何递归下载整个目录？​​","slug":"​​q2-如何递归下载整个目录-​​","link":"#​​q2-如何递归下载整个目录-​​","children":[]}]}],"git":{"createdTime":1752377758000,"updatedTime":1755358930000,"contributors":[{"name":"fakeppa","username":"fakeppa","email":"l17091799155@qq.com","commits":106,"url":"https://github.com/fakeppa"}]},"readingTime":{"minutes":2.72,"words":815},"filePathRelative":"article/03_资源/FTP命令.md","localizedDate":"2025年7月11日","excerpt":"<p>FTP默认控制连接端口是21，数据连接端口为20<br>\\n主动模式下客户端先用任意随机端口给予服务器21控制端口进行连接，然后客户端告知服务器端所使用的端口，随后建立在端口20的数据连接<br>\\nFTP（File Transfer Protocol）命令用于在客户端和服务器之间传输文件。以下是常用的 ​<strong>​FTP 命令​</strong>​（适用于大多数 FTP 客户端，如&nbsp;<code>ftp</code>、<code>lftp</code>）：</p>\\n<hr>\\n<h2>​<strong>​1. 连接与登录​</strong>​</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>命令</th>\\n<th>说明</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><code>ftp &lt;IP地址&gt;</code></td>\\n<td>连接 FTP 服务器（如&nbsp;<code>ftp 192.168.1.1</code>）</td>\\n</tr>\\n<tr>\\n<td><code>open &lt;IP地址&gt;</code></td>\\n<td>在 FTP 会话中重新连接另一个服务器</td>\\n</tr>\\n<tr>\\n<td><code>user &lt;用户名&gt;</code></td>\\n<td>重新输入用户名和密码</td>\\n</tr>\\n<tr>\\n<td><code>bye</code>/&nbsp;<code>quit</code></td>\\n<td>退出 FTP 会话</td>\\n</tr>\\n</tbody>\\n</table>","autoDesc":true}');export{h as comp,p as data};
