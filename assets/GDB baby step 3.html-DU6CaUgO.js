import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as o,b as a,o as i}from"./app-Bqr1fkzO.js";const n={};function r(s,e){return i(),o("div",null,e[0]||(e[0]=[a('<p>3,953 users solved</p><h4 id="description" tabindex="-1"><a class="header-anchor" href="#description"><span>Description</span></a></h4><p>Now for something a little different. <code>0x2262c96b</code> is loaded into memory in the <code>main</code> function. Examine byte-wise the memory that the constant is loaded in by using the GDB command <code>x/4xb addr</code>. The flag is the four bytes as they are stored in memory. If you find the bytes <code>0x11 0x22 0x33 0x44</code> in the memory location, your flag would be: <code>picoCTF{0x11223344}</code>.</p><h4 id="hints" tabindex="-1"><a class="header-anchor" href="#hints"><span>Hints</span></a></h4><ul><li>You&#39;ll need to breakpoint the instruction after the memory load.</li><li>Use the gdb command <code>x/4xb addr</code> with the memory location as the address <code>addr</code> to examine. <a href="https://ftp.gnu.org/old-gnu/Manuals/gdb/html_node/gdb_55.html" target="_blank" rel="noopener noreferrer">GDB manual page</a>.</li><li>Any registers in <code>addr</code> should be prepended with <code>$</code> like <code>$rbp</code>.</li><li>Don&#39;t use square brackets for <code>addr</code></li><li>What is <a href="https://en.wikipedia.org/wiki/Endianness" target="_blank" rel="noopener noreferrer">endianness</a>?</li></ul><hr><h1 id="_00-前言" tabindex="-1"><a class="header-anchor" href="#_00-前言"><span>00. 前言</span></a></h1><p>这题有一个简单的知识，字节序，在汇编指令中</p>',8)]))}const p=t(n,[["render",r],["__file","GDB baby step 3.html.vue"]]),l=JSON.parse('{"path":"/article/01_%E9%A1%B9%E7%9B%AE/picoCTF/%E9%80%86%E5%90%91reverse/GDB%20baby%20step%203.html","title":"GDB baby step 3","lang":"zh-CN","frontmatter":{"icon":"pen-to-square","date":"2025-01-17T00:00:00.000Z","tags":null,"title":"GDB baby step 3","category":["项目"],"description":"3,953 users solved Description Now for something a little different. 0x2262c96b is loaded into memory in the main function. Examine byte-wise the memory that the constant is loa...","head":[["meta",{"property":"og:url","content":"https://github.com/fakeppa/fakeppa.github.io/article/01_%E9%A1%B9%E7%9B%AE/picoCTF/%E9%80%86%E5%90%91reverse/GDB%20baby%20step%203.html"}],["meta",{"property":"og:site_name","content":"问己"}],["meta",{"property":"og:title","content":"GDB baby step 3"}],["meta",{"property":"og:description","content":"3,953 users solved Description Now for something a little different. 0x2262c96b is loaded into memory in the main function. Examine byte-wise the memory that the constant is loa..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-01-17T08:52:21.000Z"}],["meta",{"property":"article:published_time","content":"2025-01-17T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-01-17T08:52:21.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"GDB baby step 3\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-01-17T00:00:00.000Z\\",\\"dateModified\\":\\"2025-01-17T08:52:21.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"fakeppa\\",\\"url\\":\\"https://github.com/fakeppa/fakeppa.github.io\\"}]}"]]},"headers":[],"git":{"createdTime":1737103941000,"updatedTime":1737103941000,"contributors":[{"name":"fakeppa","username":"fakeppa","email":"l17091799155@qq.com","commits":1,"url":"https://github.com/fakeppa"}]},"readingTime":{"minutes":0.56,"words":168},"filePathRelative":"article/01_项目/picoCTF/逆向reverse/GDB baby step 3.md","localizedDate":"2025年1月17日","excerpt":"<p>3,953&nbsp;users solved</p>\\n<h4>Description</h4>\\n<p>Now for something a little different.&nbsp;<code>0x2262c96b</code>&nbsp;is loaded into memory in the&nbsp;<code>main</code>&nbsp;function. Examine byte-wise the memory that the constant is loaded in by using the GDB command&nbsp;<code>x/4xb addr</code>. The flag is the four bytes as they are stored in memory. If you find the bytes&nbsp;<code>0x11 0x22 0x33 0x44</code>&nbsp;in the memory location, your flag would be:&nbsp;<code>picoCTF{0x11223344}</code>.</p>","autoDesc":true}');export{p as comp,l as data};
