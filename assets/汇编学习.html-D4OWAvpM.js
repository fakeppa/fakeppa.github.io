import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,b as i,o as a}from"./app-Bb_NAOzZ.js";const l={};function n(c,e){return a(),t("div",null,e[0]||(e[0]=[i('<h1 id="cpu与存储器" tabindex="-1"><a class="header-anchor" href="#cpu与存储器"><span>cpu与存储器</span></a></h1><figure><img src="https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20241227153707.png" alt="image.png" tabindex="0" loading="lazy"><figcaption>image.png</figcaption></figure><p>cpu对外部器件读写数据工作原理，不同的机器码可以对应数据或者指令，分出了三种总线：</p><ul><li><p>cpu由地址总线发出寻址数据<br> 地址宽度由其并联的导线数决定，一个导线有0,1两种状态，宽度决定了其寻址数，为2^n</p></li><li><p>cpu经控制总线发出指令，对所在地址进行操作<br> 控制总线的宽度决定了cpu对外部器件控制的能力</p></li><li><p>内存与cpu经过数据总线来传递数据<br> 数据总线并联的导线数量决定了一次传输的位</p></li></ul><p>存储器芯片</p><ul><li>RAM:可读可写，需要通电</li><li>ROM:只读不可写，断电后不会丢失数据，可以存放bios</li></ul><p>这些存储器与cpu通过总线项链，但是cpu都把他们当做内存单元<br><img src="https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20241227154536.png" alt="image.png" loading="lazy"><br> cpu会以一定逻辑对地址进行分类<br><img src="https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20241227155020.png" alt="image.png" loading="lazy"></p><p>当我们需要对一个计算机硬件系统进行编程时，必须要了解起始地址和结束地址，以及存储器地址分配的结构</p><h1 id="cpu内部" tabindex="-1"><a class="header-anchor" href="#cpu内部"><span>cpu内部</span></a></h1><p>一个典型的cpu由运算器、控制器、寄存器等器件构成，他们之间通过内部总线连接<br><img src="https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20241227155542.png" alt="image.png" loading="lazy"></p><h2 id="_8086cpu寄存器" tabindex="-1"><a class="header-anchor" href="#_8086cpu寄存器"><span>8086cpu寄存器</span></a></h2><ol><li><p><strong>通用寄存器</strong>（8个）:</p><ul><li>AX（累加器寄存器）</li><li>BX（基地址寄存器）</li><li>CX（计数器寄存器）</li><li>DX（数据寄存器）</li><li>SP（堆栈指针寄存器）</li><li>BP（基指针寄存器）</li><li>SI（源变址寄存器）</li><li>DI（目的变址寄存器）</li></ul></li><li><p><strong>段寄存器</strong>（4个）:</p><ul><li>CS（代码段寄存器）</li><li>DS（数据段寄存器）</li><li>SS（堆栈段寄存器）</li><li>ES（附加段寄存器）</li></ul></li><li><p><strong>控制寄存器</strong>（2个）:</p><ul><li>IP（指令指针寄存器）</li><li>FLAG（标志寄存器）</li></ul></li></ol><h3 id="通用寄存器" tabindex="-1"><a class="header-anchor" href="#通用寄存器"><span>通用寄存器</span></a></h3>',13)]))}const o=p(l,[["render",n],["__file","汇编学习.html.vue"]]),s=JSON.parse('{"path":"/article/01_%E9%A1%B9%E7%9B%AE/%E6%B1%87%E7%BC%96%E5%AD%A6%E4%B9%A0.html","title":"汇编学习","lang":"zh-CN","frontmatter":{"icon":"pen-to-square","date":"2024-12-27T00:00:00.000Z","tags":null,"title":"汇编学习","category":["项目"],"description":"cpu与存储器 image.pngimage.png cpu对外部器件读写数据工作原理，不同的机器码可以对应数据或者指令，分出了三种总线： cpu由地址总线发出寻址数据 地址宽度由其并联的导线数决定，一个导线有0,1两种状态，宽度决定了其寻址数，为2^n cpu经控制总线发出指令，对所在地址进行操作 控制总线的宽度决定了cpu对外部器件控制的能力 内存...","head":[["meta",{"property":"og:url","content":"https://github.com/fakeppa/fakeppa.github.io/article/01_%E9%A1%B9%E7%9B%AE/%E6%B1%87%E7%BC%96%E5%AD%A6%E4%B9%A0.html"}],["meta",{"property":"og:site_name","content":"问己"}],["meta",{"property":"og:title","content":"汇编学习"}],["meta",{"property":"og:description","content":"cpu与存储器 image.pngimage.png cpu对外部器件读写数据工作原理，不同的机器码可以对应数据或者指令，分出了三种总线： cpu由地址总线发出寻址数据 地址宽度由其并联的导线数决定，一个导线有0,1两种状态，宽度决定了其寻址数，为2^n cpu经控制总线发出指令，对所在地址进行操作 控制总线的宽度决定了cpu对外部器件控制的能力 内存..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20241227153707.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-12-27T07:58:38.000Z"}],["meta",{"property":"article:published_time","content":"2024-12-27T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-12-27T07:58:38.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"汇编学习\\",\\"image\\":[\\"https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20241227153707.png\\",\\"https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20241227154536.png\\",\\"https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20241227155020.png\\",\\"https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20241227155542.png\\"],\\"datePublished\\":\\"2024-12-27T00:00:00.000Z\\",\\"dateModified\\":\\"2024-12-27T07:58:38.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"fakeppa\\",\\"url\\":\\"https://github.com/fakeppa/fakeppa.github.io\\"}]}"]]},"headers":[{"level":2,"title":"8086cpu寄存器","slug":"_8086cpu寄存器","link":"#_8086cpu寄存器","children":[{"level":3,"title":"通用寄存器","slug":"通用寄存器","link":"#通用寄存器","children":[]}]}],"git":{"createdTime":1735284747000,"updatedTime":1735286318000,"contributors":[{"name":"fakeppa","username":"fakeppa","email":"l17091799155@qq.com","commits":6,"url":"https://github.com/fakeppa"}]},"readingTime":{"minutes":1.62,"words":486},"filePathRelative":"article/01_项目/汇编学习.md","localizedDate":"2024年12月27日","excerpt":"\\n<figure><img src=\\"https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20241227153707.png\\" alt=\\"image.png\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption>image.png</figcaption></figure>\\n<p>cpu对外部器件读写数据工作原理，不同的机器码可以对应数据或者指令，分出了三种总线：</p>\\n<ul>\\n<li>\\n<p>cpu由地址总线发出寻址数据<br>\\n地址宽度由其并联的导线数决定，一个导线有0,1两种状态，宽度决定了其寻址数，为2^n</p>\\n</li>\\n<li>\\n<p>cpu经控制总线发出指令，对所在地址进行操作<br>\\n控制总线的宽度决定了cpu对外部器件控制的能力</p>\\n</li>\\n<li>\\n<p>内存与cpu经过数据总线来传递数据<br>\\n数据总线并联的导线数量决定了一次传输的位</p>\\n</li>\\n</ul>","autoDesc":true}');export{o as comp,s as data};
