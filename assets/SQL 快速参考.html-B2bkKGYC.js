import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,b as l,o as a}from"./app-Bqr1fkzO.js";const d={};function o(s,t){return a(),n("div",null,t[0]||(t[0]=[l(`<h1 id="sql-笔记" tabindex="-1"><a class="header-anchor" href="#sql-笔记"><span>SQL 笔记</span></a></h1><hr><table><thead><tr><th style="text-align:left;">SQL 语句</th><th style="text-align:left;">语法</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;"><strong>AND / OR</strong></td><td style="text-align:left;">SELECT column_name(s) FROM table_name WHERE condition AND|OR condition</td><td style="text-align:left;">AND：表示逻辑与 OR：表示逻辑或</td></tr><tr><td style="text-align:left;"><strong>ALTER TABLE</strong></td><td style="text-align:left;"><code>ALTER TABLE table_name ADD column_name datatypeALTER TABLE table_name DROP COLUMN column_name</code></td><td style="text-align:left;">用于修改现有表的结构，添加或删除列。</td></tr><tr><td style="text-align:left;"><strong>AS (alias)</strong></td><td style="text-align:left;"><code>SELECT column_name AS column_alias FROM table_nameSELECT column_name FROM table_name AS table_alias</code></td><td style="text-align:left;">用于为列或表指定别名。</td></tr><tr><td style="text-align:left;"><strong>BETWEEN</strong></td><td style="text-align:left;"><code>SELECT column_name(s) FROM table_name WHERE column_name BETWEEN value1 AND value2</code></td><td style="text-align:left;">用于筛选在指定范围内的记录。</td></tr><tr><td style="text-align:left;"><strong>CREATE DATABASE</strong></td><td style="text-align:left;"><code>CREATE DATABASE database_name</code></td><td style="text-align:left;">用于创建新数据库。</td></tr><tr><td style="text-align:left;"><strong>CREATE TABLE</strong></td><td style="text-align:left;"><code>CREATE TABLE table_name (column_name1 data_type, column_name2 data_type, ...)</code></td><td style="text-align:left;">用于创建新表，定义表的列和数据类型。</td></tr><tr><td style="text-align:left;"><strong>CREATE INDEX</strong></td><td style="text-align:left;"><code>CREATE INDEX index_name ON table_name (column_name)CREATE UNIQUE INDEX index_name ON table_name (column_name)</code></td><td style="text-align:left;">用于在表的列上创建索引，以加速查询。</td></tr><tr><td style="text-align:left;"><strong>CREATE VIEW</strong></td><td style="text-align:left;"><code>CREATE VIEW view_name AS SELECT column_name(s) FROM table_name WHERE condition</code></td><td style="text-align:left;">用于创建视图，以保存复杂查询的结果。</td></tr><tr><td style="text-align:left;"><strong>DELETE</strong></td><td style="text-align:left;"><code>DELETE FROM table_name WHERE some_column=some_valueDELETE FROM table_nameDELETE * FROM table_name</code></td><td style="text-align:left;">用于删除表中的记录，<code>DELETE FROM table_name</code> 和 <code>DELETE * FROM table_name</code> 会删除所有记录。</td></tr><tr><td style="text-align:left;"><strong>DROP DATABASE</strong></td><td style="text-align:left;"><code>DROP DATABASE database_name</code></td><td style="text-align:left;">用于删除数据库。</td></tr><tr><td style="text-align:left;"><strong>DROP INDEX</strong></td><td style="text-align:left;"><code>DROP INDEX table_name.index_name (SQL Server)DROP INDEX index_name ON table_name (MS Access)DROP INDEX index_name (DB2/Oracle)ALTER TABLE table_name DROP INDEX index_name (MySQL)</code></td><td style="text-align:left;">用于删除表上的索引。</td></tr><tr><td style="text-align:left;"><strong>DROP TABLE</strong></td><td style="text-align:left;"><code>DROP TABLE table_name</code></td><td style="text-align:left;">用于删除表及其所有数据。</td></tr><tr><td style="text-align:left;"><strong>GROUP BY</strong></td><td style="text-align:left;"><code>SELECT column_name, aggregate_function(column_name) FROM table_name WHERE column_name operator value GROUP BY column_name</code></td><td style="text-align:left;">用于按一个或多个列对结果集进行分组。</td></tr><tr><td style="text-align:left;"><strong>HAVING</strong></td><td style="text-align:left;"><code>SELECT column_name, aggregate_function(column_name) FROM table_name WHERE column_name operator value GROUP BY column_name HAVING aggregate_function(column_name) operator value</code></td><td style="text-align:left;">用于对分组后的结果集进行过滤。</td></tr><tr><td style="text-align:left;"><strong>IN</strong></td><td style="text-align:left;"><code>SELECT column_name(s) FROM table_name WHERE column_name IN (value1, value2, ...)</code></td><td style="text-align:left;">用于筛选匹配集合中某一值的记录。</td></tr><tr><td style="text-align:left;"><strong>INSERT INTO</strong></td><td style="text-align:left;"><code>INSERT INTO table_name VALUES (value1, value2, ...)INSERT INTO table_name (column1, column2, ...) VALUES (value1, value2, ...)</code></td><td style="text-align:left;">用于向表中插入新记录。</td></tr><tr><td style="text-align:left;"><strong>INNER JOIN</strong></td><td style="text-align:left;"><code>SELECT column_name(s) FROM table_name1 INNER JOIN table_name2 ON table_name1.column_name=table_name2.column_name</code></td><td style="text-align:left;">用于返回两个表中匹配的记录。</td></tr><tr><td style="text-align:left;"><strong>LEFT JOIN</strong></td><td style="text-align:left;"><code>SELECT column_name(s) FROM table_name1 LEFT JOIN table_name2 ON table_name1.column_name=table_name2.column_name</code></td><td style="text-align:left;">用于返回左表中的所有记录和右表中的匹配记录。</td></tr><tr><td style="text-align:left;"><strong>RIGHT JOIN</strong></td><td style="text-align:left;"><code>SELECT column_name(s) FROM table_name1 RIGHT JOIN table_name2 ON table_name1.column_name=table_name2.column_name</code></td><td style="text-align:left;">用于返回右表中的所有记录和左表中的匹配记录。</td></tr><tr><td style="text-align:left;"><strong>FULL JOIN</strong></td><td style="text-align:left;"><code>SELECT column_name(s) FROM table_name1 FULL JOIN table_name2 ON table_name1.column_name=table_name2.column_name</code></td><td style="text-align:left;">用于返回两个表中的所有记录，不论是否匹配。</td></tr><tr><td style="text-align:left;"><strong>LIKE</strong></td><td style="text-align:left;"><code>SELECT column_name(s) FROM table_name WHERE column_name LIKE pattern</code></td><td style="text-align:left;">用于筛选匹配特定模式的记录。</td></tr><tr><td style="text-align:left;"><strong>ORDER BY</strong></td><td style="text-align:left;">SELECT column_name(s) FROM table_name ORDER BY column_name [ASC|DESC]</td><td style="text-align:left;">用于对结果集进行排序。ASC 表示升序排列（默认），DESC 表示降序排列。</td></tr><tr><td style="text-align:left;"><strong>SELECT</strong></td><td style="text-align:left;"><code>SELECT column_name(s) FROM table_name</code></td><td style="text-align:left;">用于从表中选择数据。</td></tr><tr><td style="text-align:left;"><strong>SELECT</strong></td><td style="text-align:left;"><code>SELECT * FROM table_name</code></td><td style="text-align:left;">用于选择表中的所有列。</td></tr><tr><td style="text-align:left;"><strong>SELECT DISTINCT</strong></td><td style="text-align:left;"><code>SELECT DISTINCT column_name(s) FROM table_name</code></td><td style="text-align:left;">用于返回唯一不同的值。</td></tr><tr><td style="text-align:left;"><strong>SELECT INTO</strong></td><td style="text-align:left;"><code>SELECT * INTO new_table_name [IN externaldatabase] FROM old_table_nameSELECT column_name(s) INTO new_table_name [IN externaldatabase] FROM old_table_name</code></td><td style="text-align:left;">用于从一个表中选择数据并插入到新表中。</td></tr><tr><td style="text-align:left;"><strong>SELECT TOP</strong></td><td style="text-align:left;">SELECT TOP number|percent column_name(s) FROM table_name ORDER BY column_name [ASC|DESC]</td><td style="text-align:left;">从表中返回前指定数量的记录，可以指定绝对数量或百分比。</td></tr><tr><td style="text-align:left;"><strong>TRUNCATE TABLE</strong></td><td style="text-align:left;"><code>TRUNCATE TABLE table_name</code></td><td style="text-align:left;">用于删除表中的所有数据，但不删除表结构。</td></tr><tr><td style="text-align:left;"><strong>UNION</strong></td><td style="text-align:left;"><code>SELECT column_name(s) FROM table_name1 UNION SELECT column_name(s) FROM table_name2</code></td><td style="text-align:left;">用于合并两个或多个 SELECT 语句的结果集，不包含重复记录。</td></tr><tr><td style="text-align:left;"><strong>UNION ALL</strong></td><td style="text-align:left;"><code>SELECT column_name(s) FROM table_name1 UNION ALL SELECT column_name(s) FROM table_name2</code></td><td style="text-align:left;">用于合并两个或多个 SELECT 语句的结果集，包含重复记录。</td></tr><tr><td style="text-align:left;"><strong>UPDATE</strong></td><td style="text-align:left;"><code>UPDATE table_name SET column1=value, column2=value, ... WHERE some_column=some_value</code></td><td style="text-align:left;">用于修改表中的现有记录。</td></tr><tr><td style="text-align:left;"><strong>WHERE</strong></td><td style="text-align:left;"><code>SELECT column_name(s) FROM table_name WHERE column_name operator value</code></td><td style="text-align:left;">用于过滤记录，指定查询条件。</td></tr></tbody></table><figure><img src="https://cdn.jsdelivr.net/gh/fakeppa/blog-img/SQL.png" alt="SQL.png" tabindex="0" loading="lazy"><figcaption>SQL.png</figcaption></figure><h1 id="一些最重要的-sql-命令" tabindex="-1"><a class="header-anchor" href="#一些最重要的-sql-命令"><span>一些最重要的 SQL 命令</span></a></h1><ul><li><p><strong>SELECT</strong> - 从数据库中提取数据(查询列)</p><ul><li><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>SELECT column_name(s) #要查的列</span></span>
<span class="line"><span>FROM table_name #要查的表</span></span>
<span class="line"><span>WHERE condition #显示的列内容的条件</span></span>
<span class="line"><span>ORDER BY column_name [ASC|DESC]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>​ 可以select * 代表选取所有列</p></li><li><p><code>column_name(s)</code>: 要查询的列。</p></li><li><p><code>table_name</code>: 要查询的表。</p></li><li><p><code>condition</code>: 查询条件（可选）。</p></li><li><p><code>ORDER BY</code>: 排序方式，<code>ASC</code> 表示升序，<code>DESC</code> 表示降序（可选）。</p></li></ul></li><li><p><strong>UPDATE</strong> - 更新数据库中的数据</p></li><li><p><strong>DELETE</strong> - 从数据库中删除数据</p></li><li><p><strong>INSERT INTO</strong> - 向数据库中插入新数据</p><ul><li><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>INSERT INTO table_name (column1, column2, ...)</span></span>
<span class="line"><span>VALUES (value1, value2, ...)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>table_name</code>: 要插入数据的表。</li><li><code>column1, column2, ...</code>: 要插入数据的列。</li><li><code>value1, value2, ...</code>: 对应列的值。</li></ul></li></ul></li><li><p><strong>CREATE DATABASE</strong> - 创建新数据库</p></li><li><p><strong>ALTER DATABASE</strong> - 修改数据库</p></li><li><p><strong>CREATE TABLE</strong> - 创建新表</p></li><li><p><strong>ALTER TABLE</strong> - 变更（改变）数据库表</p></li><li><p><strong>DROP TABLE</strong> - 删除表</p></li><li><p><strong>CREATE INDEX</strong> - 创建索引（搜索键）</p></li><li><p><strong>DROP INDEX</strong> - 删除索引</p></li><li><p><strong>UNION</strong></p></li></ul>`,6)]))}const r=e(d,[["render",o],["__file","SQL 快速参考.html.vue"]]),g=JSON.parse('{"path":"/article/03_%E8%B5%84%E6%BA%90/SQL%E6%B3%A8%E5%85%A5%E5%93%92/SQL%20%E5%BF%AB%E9%80%9F%E5%8F%82%E8%80%83.html","title":"SQL 快速参考","lang":"zh-CN","frontmatter":{"icon":"pen-to-square","date":"2024-12-10T00:00:00.000Z","category":["资源"],"tags":null,"title":"SQL 快速参考","description":"SQL 笔记 SQL.pngSQL.png 一些最重要的 SQL 命令 SELECT - 从数据库中提取数据(查询列) ​ 可以select * 代表选取所有列 column_name(s): 要查询的列。 table_name: 要查询的表。 condition: 查询条件（可选）。 ORDER BY: 排序方式，ASC 表示升序，DESC 表示降序...","head":[["meta",{"property":"og:url","content":"https://github.com/fakeppa/fakeppa.github.io/article/03_%E8%B5%84%E6%BA%90/SQL%E6%B3%A8%E5%85%A5%E5%93%92/SQL%20%E5%BF%AB%E9%80%9F%E5%8F%82%E8%80%83.html"}],["meta",{"property":"og:site_name","content":"问己"}],["meta",{"property":"og:title","content":"SQL 快速参考"}],["meta",{"property":"og:description","content":"SQL 笔记 SQL.pngSQL.png 一些最重要的 SQL 命令 SELECT - 从数据库中提取数据(查询列) ​ 可以select * 代表选取所有列 column_name(s): 要查询的列。 table_name: 要查询的表。 condition: 查询条件（可选）。 ORDER BY: 排序方式，ASC 表示升序，DESC 表示降序..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://cdn.jsdelivr.net/gh/fakeppa/blog-img/SQL.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-01-17T08:52:21.000Z"}],["meta",{"property":"article:published_time","content":"2024-12-10T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-01-17T08:52:21.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"SQL 快速参考\\",\\"image\\":[\\"https://cdn.jsdelivr.net/gh/fakeppa/blog-img/SQL.png\\"],\\"datePublished\\":\\"2024-12-10T00:00:00.000Z\\",\\"dateModified\\":\\"2025-01-17T08:52:21.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"fakeppa\\",\\"url\\":\\"https://github.com/fakeppa/fakeppa.github.io\\"}]}"]]},"headers":[],"git":{"createdTime":1734598308000,"updatedTime":1737103941000,"contributors":[{"name":"fakeppa","username":"fakeppa","email":"l17091799155@qq.com","commits":519,"url":"https://github.com/fakeppa"}]},"readingTime":{"minutes":3.72,"words":1117},"filePathRelative":"article/03_资源/SQL注入哒/SQL 快速参考.md","localizedDate":"2024年12月10日","excerpt":"\\n<hr>\\n<table>\\n<thead>\\n<tr>\\n<th style=\\"text-align:left\\">SQL 语句</th>\\n<th style=\\"text-align:left\\">语法</th>\\n<th style=\\"text-align:left\\">说明</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td style=\\"text-align:left\\"><strong>AND / OR</strong></td>\\n<td style=\\"text-align:left\\">SELECT column_name(s) FROM table_name WHERE condition AND|OR condition</td>\\n<td style=\\"text-align:left\\">AND：表示逻辑与 OR：表示逻辑或</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:left\\"><strong>ALTER TABLE</strong></td>\\n<td style=\\"text-align:left\\"><code>ALTER TABLE table_name ADD column_name datatypeALTER TABLE table_name DROP COLUMN column_name</code></td>\\n<td style=\\"text-align:left\\">用于修改现有表的结构，添加或删除列。</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:left\\"><strong>AS (alias)</strong></td>\\n<td style=\\"text-align:left\\"><code>SELECT column_name AS column_alias FROM table_nameSELECT column_name FROM table_name AS table_alias</code></td>\\n<td style=\\"text-align:left\\">用于为列或表指定别名。</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:left\\"><strong>BETWEEN</strong></td>\\n<td style=\\"text-align:left\\"><code>SELECT column_name(s) FROM table_name WHERE column_name BETWEEN value1 AND value2</code></td>\\n<td style=\\"text-align:left\\">用于筛选在指定范围内的记录。</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:left\\"><strong>CREATE DATABASE</strong></td>\\n<td style=\\"text-align:left\\"><code>CREATE DATABASE database_name</code></td>\\n<td style=\\"text-align:left\\">用于创建新数据库。</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:left\\"><strong>CREATE TABLE</strong></td>\\n<td style=\\"text-align:left\\"><code>CREATE TABLE table_name (column_name1 data_type, column_name2 data_type, ...)</code></td>\\n<td style=\\"text-align:left\\">用于创建新表，定义表的列和数据类型。</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:left\\"><strong>CREATE INDEX</strong></td>\\n<td style=\\"text-align:left\\"><code>CREATE INDEX index_name ON table_name (column_name)CREATE UNIQUE INDEX index_name ON table_name (column_name)</code></td>\\n<td style=\\"text-align:left\\">用于在表的列上创建索引，以加速查询。</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:left\\"><strong>CREATE VIEW</strong></td>\\n<td style=\\"text-align:left\\"><code>CREATE VIEW view_name AS SELECT column_name(s) FROM table_name WHERE condition</code></td>\\n<td style=\\"text-align:left\\">用于创建视图，以保存复杂查询的结果。</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:left\\"><strong>DELETE</strong></td>\\n<td style=\\"text-align:left\\"><code>DELETE FROM table_name WHERE some_column=some_valueDELETE FROM table_nameDELETE * FROM table_name</code></td>\\n<td style=\\"text-align:left\\">用于删除表中的记录，<code>DELETE FROM table_name</code> 和 <code>DELETE * FROM table_name</code> 会删除所有记录。</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:left\\"><strong>DROP DATABASE</strong></td>\\n<td style=\\"text-align:left\\"><code>DROP DATABASE database_name</code></td>\\n<td style=\\"text-align:left\\">用于删除数据库。</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:left\\"><strong>DROP INDEX</strong></td>\\n<td style=\\"text-align:left\\"><code>DROP INDEX table_name.index_name (SQL Server)DROP INDEX index_name ON table_name (MS Access)DROP INDEX index_name (DB2/Oracle)ALTER TABLE table_name DROP INDEX index_name (MySQL)</code></td>\\n<td style=\\"text-align:left\\">用于删除表上的索引。</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:left\\"><strong>DROP TABLE</strong></td>\\n<td style=\\"text-align:left\\"><code>DROP TABLE table_name</code></td>\\n<td style=\\"text-align:left\\">用于删除表及其所有数据。</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:left\\"><strong>GROUP BY</strong></td>\\n<td style=\\"text-align:left\\"><code>SELECT column_name, aggregate_function(column_name) FROM table_name WHERE column_name operator value GROUP BY column_name</code></td>\\n<td style=\\"text-align:left\\">用于按一个或多个列对结果集进行分组。</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:left\\"><strong>HAVING</strong></td>\\n<td style=\\"text-align:left\\"><code>SELECT column_name, aggregate_function(column_name) FROM table_name WHERE column_name operator value GROUP BY column_name HAVING aggregate_function(column_name) operator value</code></td>\\n<td style=\\"text-align:left\\">用于对分组后的结果集进行过滤。</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:left\\"><strong>IN</strong></td>\\n<td style=\\"text-align:left\\"><code>SELECT column_name(s) FROM table_name WHERE column_name IN (value1, value2, ...)</code></td>\\n<td style=\\"text-align:left\\">用于筛选匹配集合中某一值的记录。</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:left\\"><strong>INSERT INTO</strong></td>\\n<td style=\\"text-align:left\\"><code>INSERT INTO table_name VALUES (value1, value2, ...)INSERT INTO table_name (column1, column2, ...) VALUES (value1, value2, ...)</code></td>\\n<td style=\\"text-align:left\\">用于向表中插入新记录。</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:left\\"><strong>INNER JOIN</strong></td>\\n<td style=\\"text-align:left\\"><code>SELECT column_name(s) FROM table_name1 INNER JOIN table_name2 ON table_name1.column_name=table_name2.column_name</code></td>\\n<td style=\\"text-align:left\\">用于返回两个表中匹配的记录。</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:left\\"><strong>LEFT JOIN</strong></td>\\n<td style=\\"text-align:left\\"><code>SELECT column_name(s) FROM table_name1 LEFT JOIN table_name2 ON table_name1.column_name=table_name2.column_name</code></td>\\n<td style=\\"text-align:left\\">用于返回左表中的所有记录和右表中的匹配记录。</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:left\\"><strong>RIGHT JOIN</strong></td>\\n<td style=\\"text-align:left\\"><code>SELECT column_name(s) FROM table_name1 RIGHT JOIN table_name2 ON table_name1.column_name=table_name2.column_name</code></td>\\n<td style=\\"text-align:left\\">用于返回右表中的所有记录和左表中的匹配记录。</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:left\\"><strong>FULL JOIN</strong></td>\\n<td style=\\"text-align:left\\"><code>SELECT column_name(s) FROM table_name1 FULL JOIN table_name2 ON table_name1.column_name=table_name2.column_name</code></td>\\n<td style=\\"text-align:left\\">用于返回两个表中的所有记录，不论是否匹配。</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:left\\"><strong>LIKE</strong></td>\\n<td style=\\"text-align:left\\"><code>SELECT column_name(s) FROM table_name WHERE column_name LIKE pattern</code></td>\\n<td style=\\"text-align:left\\">用于筛选匹配特定模式的记录。</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:left\\"><strong>ORDER BY</strong></td>\\n<td style=\\"text-align:left\\">SELECT column_name(s) FROM table_name ORDER BY column_name [ASC|DESC]</td>\\n<td style=\\"text-align:left\\">用于对结果集进行排序。ASC 表示升序排列（默认），DESC 表示降序排列。</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:left\\"><strong>SELECT</strong></td>\\n<td style=\\"text-align:left\\"><code>SELECT column_name(s) FROM table_name</code></td>\\n<td style=\\"text-align:left\\">用于从表中选择数据。</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:left\\"><strong>SELECT</strong></td>\\n<td style=\\"text-align:left\\"><code>SELECT * FROM table_name</code></td>\\n<td style=\\"text-align:left\\">用于选择表中的所有列。</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:left\\"><strong>SELECT DISTINCT</strong></td>\\n<td style=\\"text-align:left\\"><code>SELECT DISTINCT column_name(s) FROM table_name</code></td>\\n<td style=\\"text-align:left\\">用于返回唯一不同的值。</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:left\\"><strong>SELECT INTO</strong></td>\\n<td style=\\"text-align:left\\"><code>SELECT * INTO new_table_name [IN externaldatabase] FROM old_table_nameSELECT column_name(s) INTO new_table_name [IN externaldatabase] FROM old_table_name</code></td>\\n<td style=\\"text-align:left\\">用于从一个表中选择数据并插入到新表中。</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:left\\"><strong>SELECT TOP</strong></td>\\n<td style=\\"text-align:left\\">SELECT TOP number|percent column_name(s) FROM table_name ORDER BY column_name [ASC|DESC]</td>\\n<td style=\\"text-align:left\\">从表中返回前指定数量的记录，可以指定绝对数量或百分比。</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:left\\"><strong>TRUNCATE TABLE</strong></td>\\n<td style=\\"text-align:left\\"><code>TRUNCATE TABLE table_name</code></td>\\n<td style=\\"text-align:left\\">用于删除表中的所有数据，但不删除表结构。</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:left\\"><strong>UNION</strong></td>\\n<td style=\\"text-align:left\\"><code>SELECT column_name(s) FROM table_name1 UNION SELECT column_name(s) FROM table_name2</code></td>\\n<td style=\\"text-align:left\\">用于合并两个或多个 SELECT 语句的结果集，不包含重复记录。</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:left\\"><strong>UNION ALL</strong></td>\\n<td style=\\"text-align:left\\"><code>SELECT column_name(s) FROM table_name1 UNION ALL SELECT column_name(s) FROM table_name2</code></td>\\n<td style=\\"text-align:left\\">用于合并两个或多个 SELECT 语句的结果集，包含重复记录。</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:left\\"><strong>UPDATE</strong></td>\\n<td style=\\"text-align:left\\"><code>UPDATE table_name SET column1=value, column2=value, ... WHERE some_column=some_value</code></td>\\n<td style=\\"text-align:left\\">用于修改表中的现有记录。</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:left\\"><strong>WHERE</strong></td>\\n<td style=\\"text-align:left\\"><code>SELECT column_name(s) FROM table_name WHERE column_name operator value</code></td>\\n<td style=\\"text-align:left\\">用于过滤记录，指定查询条件。</td>\\n</tr>\\n</tbody>\\n</table>","autoDesc":true}');export{r as comp,g as data};
