import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,b as a,o as n}from"./app-xRrYF1b9.js";const h={};function t(l,i){return n(),e("div",null,i[0]||(i[0]=[a(`<h1 id="word-list字典模式" tabindex="-1"><a class="header-anchor" href="#word-list字典模式"><span>word-list字典模式</span></a></h1><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">john</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [options] [file path]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="识别哈希-hash-identifier" tabindex="-1"><a class="header-anchor" href="#识别哈希-hash-identifier"><span>识别哈希 hash-identifier</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">wget</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://gitlab.com/kalilinux/packages/hash-identifier/-/raw/kali/master/hash-id.py</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>获取 <a href="https://gitlab.com/kalilinux/packages/hash-identifier/-/tree/kali/master" target="_blank" rel="noopener noreferrer">hash-identifier</a><br><code>python hash-identifier</code><br><img src="https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20250402142710.png" alt="image.png" loading="lazy"></p><h2 id="破解基本格式的hash" tabindex="-1"><a class="header-anchor" href="#破解基本格式的hash"><span>破解基本格式的hash</span></a></h2><p>需要提供哈希的类型</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">john</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --format=[format]</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --wordlist=[path to wordlist]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [path </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">to</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> file]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><code>--format=</code>：这是告诉 John 您正在为其提供特定格式的哈希值并使用以下格式破解它的标志</li><li><code>[format]</code>：哈希值的格式</li></ul><h2 id="实例-破解windows身份验证哈希" tabindex="-1"><a class="header-anchor" href="#实例-破解windows身份验证哈希"><span>实例---破解windows身份验证哈希</span></a></h2><p>windows身份验证所用的哈希技术为NTHash<br> 在破解NTLM时需要设置--FORMAT为 nt</p><h2 id="实例-破解linux密码哈希" tabindex="-1"><a class="header-anchor" href="#实例-破解linux密码哈希"><span>实例--破解linux密码哈希</span></a></h2><p><code>/etc/passwd</code>部分的哈希需要用unshadow进行处理，才能与john进行交互</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">unshadow</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [path </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">to</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> passwd]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [path </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">to</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> shadow]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>示例用法：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">unshadow</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> local_passwd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> local_shadow</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">unshadowed.txt</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>然后再进行john破解即可</p><h1 id="single-crack-模式" tabindex="-1"><a class="header-anchor" href="#single-crack-模式"><span>Single Crack 模式</span></a></h1><p>单词修饰<br> 解释 Single Crack 模式和单词修饰的最好方法是通过一个例子：</p><p>考虑用户名 “Markus”。</p><p>一些可能的密码可能是：</p><p>Markus1、Markus2、Markus3 （等）<br> MArkus、MARkus、MARKus （等）<br> Markus！， Markus$， Markus* （等）</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">john</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --single</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --format=[format]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [path </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">to</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> file]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>示例<br><code>john --single --format=raw-sha256 hashes.txt</code></p><h2 id="自定义规则" tabindex="-1"><a class="header-anchor" href="#自定义规则"><span>自定义规则</span></a></h2><p>自定义规则通常定义在<code>john.conf</code>文件中。</p><h3 id="定义规则名称" tabindex="-1"><a class="header-anchor" href="#定义规则名称"><span>定义规则名称</span></a></h3><p>在<code>john.conf</code>文件中，首先定义规则的名称，格式如下：</p><p><code>[List.Rules:CustomRuleName]</code><br> 其中<code>CustomRuleName</code>是你自定义的规则名称，后续在命令行中会用到。<br> 然后添加规则<br> Az：获取单词并附加您定义的字符<br> A0：获取单词并在其前面加上您定义的字符<br> c：按位置将字符大写</p><p>最后，我们必须定义应该附加、前置或以其他方式包含哪些字符。我们通过在应该使用它们的地方的方括号中添加字符集来实现这一点。这些遵循双引号内的修饰符模式。以下是一些常见示例:<br><code>[0-9]</code>：将包含数字 0-9<br><code>[0]</code>：将仅包含数字 0<br><code>[A-z]</code>：将同时包括大写和小写<br><code>[A-Z]</code>：将仅包含大写字母<br><code>[a-z]</code>：将仅包含小写字母<br> 规则示例</p><div class="language-conf line-numbers-mode" data-highlighter="shiki" data-ext="conf" data-title="conf" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span># 自定义规则示例</span></span>
<span class="line"><span>[List.Rules:MyRules]</span></span>
<span class="line"><span># 用户名后添加2023</span></span>
<span class="line"><span>$2$0$2$3</span></span>
<span class="line"><span># 首字母大写并添加!</span></span>
<span class="line"><span>c$!</span></span>
<span class="line"><span># 替换所有a为@</span></span>
<span class="line"><span>sa@</span></span>
<span class="line"><span># 用户名反转后添加数字</span></span>
<span class="line"><span>r$1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="破解受密码保护的-zip-文件" tabindex="-1"><a class="header-anchor" href="#破解受密码保护的-zip-文件"><span>破解受密码保护的 zip 文件</span></a></h1><p>使用Zip2John将 Zip 文件转换为 John 可以理解并希望破解的哈希格式</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">zip2john</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [options] [zip file] &gt; [output file]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><code>[options]</code>：允许您将特定的校验和选项传递给 ;这通常不是必需的zip2john<br><code>[zip file]</code>：要获取其哈希值的 Zip 文件的路径<br><code>&gt;</code>：这会将此命令的输出重定向到另一个文件<br><code>[output file]</code>：这是将存储输出的文件</p><p>示例用法</p><p>zip2john zipfile.zip &gt; zip_hash.txt</p><p>然后使用john破解即可</p><h1 id="破解受密码保护的-rar-文件" tabindex="-1"><a class="header-anchor" href="#破解受密码保护的-rar-文件"><span>破解受密码保护的 RAR 文件</span></a></h1><p>rar2john</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>rar2john [rar file] &gt; [output file]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h1 id="破解ssh密钥密码" tabindex="-1"><a class="header-anchor" href="#破解ssh密钥密码"><span>破解SSH密钥密码</span></a></h1><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ssh2john</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [id_rsa </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">private</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> key</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> file]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &gt; [output </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">file]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>示例用法</strong></p><p><code>/opt/john/ssh2john.py id_rsa &gt; id_rsa_hash.txt</code></p>`,45)]))}const p=s(h,[["render",t],["__file","John the Ripper.html.vue"]]),o=JSON.parse('{"path":"/article/01_%E9%A1%B9%E7%9B%AE/THM/John%20the%20Ripper.html","title":"John the Ripper","lang":"zh-CN","frontmatter":{"icon":"pen-to-square","date":"2025-04-02T00:00:00.000Z","tags":null,"title":"John the Ripper","category":["项目"],"description":"word-list字典模式 识别哈希 hash-identifier 获取 hash-identifier python hash-identifier image.png 破解基本格式的hash 需要提供哈希的类型 --format=：这是告诉 John 您正在为其提供特定格式的哈希值并使用以下格式破解它的标志 [format]：哈希值的格式 实例-...","head":[["meta",{"property":"og:url","content":"https://github.com/fakeppa/fakeppa.github.io/article/01_%E9%A1%B9%E7%9B%AE/THM/John%20the%20Ripper.html"}],["meta",{"property":"og:site_name","content":"问己"}],["meta",{"property":"og:title","content":"John the Ripper"}],["meta",{"property":"og:description","content":"word-list字典模式 识别哈希 hash-identifier 获取 hash-identifier python hash-identifier image.png 破解基本格式的hash 需要提供哈希的类型 --format=：这是告诉 John 您正在为其提供特定格式的哈希值并使用以下格式破解它的标志 [format]：哈希值的格式 实例-..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20250402142710.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-07-16T18:29:23.000Z"}],["meta",{"property":"article:published_time","content":"2025-04-02T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-07-16T18:29:23.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"John the Ripper\\",\\"image\\":[\\"https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20250402142710.png\\"],\\"datePublished\\":\\"2025-04-02T00:00:00.000Z\\",\\"dateModified\\":\\"2025-07-16T18:29:23.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"fakeppa\\",\\"url\\":\\"https://github.com/fakeppa/fakeppa.github.io\\"}]}"]]},"headers":[{"level":2,"title":"识别哈希 hash-identifier","slug":"识别哈希-hash-identifier","link":"#识别哈希-hash-identifier","children":[]},{"level":2,"title":"破解基本格式的hash","slug":"破解基本格式的hash","link":"#破解基本格式的hash","children":[]},{"level":2,"title":"实例---破解windows身份验证哈希","slug":"实例-破解windows身份验证哈希","link":"#实例-破解windows身份验证哈希","children":[]},{"level":2,"title":"实例--破解linux密码哈希","slug":"实例-破解linux密码哈希","link":"#实例-破解linux密码哈希","children":[]},{"level":2,"title":"自定义规则","slug":"自定义规则","link":"#自定义规则","children":[{"level":3,"title":"定义规则名称","slug":"定义规则名称","link":"#定义规则名称","children":[]}]}],"git":{"createdTime":1743573748000,"updatedTime":1752690563000,"contributors":[{"name":"fakeppa","username":"fakeppa","email":"l17091799155@qq.com","commits":326,"url":"https://github.com/fakeppa"}]},"readingTime":{"minutes":2.53,"words":760},"filePathRelative":"article/01_项目/THM/John the Ripper.md","localizedDate":"2025年4月2日","excerpt":"\\n<div class=\\"language-bash line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"bash\\" data-title=\\"bash\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">john</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\"> [options] [file path]</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{p as comp,o as data};
