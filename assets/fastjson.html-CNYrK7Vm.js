import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,b as a,o as t}from"./app-BVafOqMc.js";const n={};function l(h,e){return t(),i("div",null,e[0]||(e[0]=[a('<h1 id="搭建环境时出现的问题" tabindex="-1"><a class="header-anchor" href="#搭建环境时出现的问题"><span>搭建环境时出现的问题：</span></a></h1><h2 id="ssl证书-因为直接恢复快照导致时间不对-从而导致ssl验证失败" tabindex="-1"><a class="header-anchor" href="#ssl证书-因为直接恢复快照导致时间不对-从而导致ssl验证失败"><span>SSL证书：因为直接恢复快照导致时间不对，从而导致ssl验证失败</span></a></h2><pre><code> ### 1. 安装`ntp`服务\n\n首先，确保你的系统安装了`ntp`（网络时间协议）服务。可以使用以下命令安装：\n\n```bash\nsudo yum install ntp\n```\n\n### 2. 启动并启用`ntp`服务\n\n安装完成后，启动`ntp`服务并设置为开机自启：\n\n```bash\nsudo systemctl start ntpd\nsudo systemctl enable ntpd\n</code></pre><ul><li><h1 id="pip不好用-直接用pip3可以解决问题" tabindex="-1"><a class="header-anchor" href="#pip不好用-直接用pip3可以解决问题"><span>pip不好用，直接用pip3可以解决问题</span></a></h1><ol><li><p><strong>安装 Python 3 和 pip3</strong>：接下来，安装 Python 3 和 <code>pip3</code>。运行以下命令：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> yum</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> python3</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>这将同时安装 Python 3 和 <code>pip3</code>。</p></li><li><p><strong>验证安装</strong>：安装完成后，你可以通过以下命令验证 <code>pip3</code> 是否成功安装：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pip3</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --version</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>如果安装成功，你将看到 <code>pip3</code> 的版本信息。</p></li></ol></li></ul><h2 id="搭建vulhub可用的方法" tabindex="-1"><a class="header-anchor" href="#搭建vulhub可用的方法"><span>搭建vulhub可用的方法：</span></a></h2><p>在 CentOS 上不使用 Git 拉取 Vulhub，你可以通过直接下载其压缩包的方式来获取。以下是详细步骤：</p><h3 id="步骤-1-安装-wget-如果尚未安装" tabindex="-1"><a class="header-anchor" href="#步骤-1-安装-wget-如果尚未安装"><span>步骤 1：安装 <code>wget</code>（如果尚未安装）</span></a></h3><p>首先，确保你的 CentOS 系统上安装了 <code>wget</code> 工具。你可以通过以下命令来安装：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> yum</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> wget</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="步骤-2-下载-vulhub-压缩包" tabindex="-1"><a class="header-anchor" href="#步骤-2-下载-vulhub-压缩包"><span>步骤 2：下载 Vulhub 压缩包</span></a></h3><p>使用 <code>wget</code> 命令直接从 GitHub 下载 Vulhub 的压缩包。打开终端并输入以下命令：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">wget</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://github.com/vulhub/vulhub/archive/refs/heads/master.zip</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="步骤-3-安装-unzip-如果尚未安装" tabindex="-1"><a class="header-anchor" href="#步骤-3-安装-unzip-如果尚未安装"><span>步骤 3：安装 <code>unzip</code>（如果尚未安装）</span></a></h3><p>如果你的系统上没有安装 <code>unzip</code> 工具，可以通过以下命令安装：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> yum</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> unzip</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="步骤-4-解压缩下载的文件" tabindex="-1"><a class="header-anchor" href="#步骤-4-解压缩下载的文件"><span>步骤 4：解压缩下载的文件</span></a></h3><p>下载完成后，使用 <code>unzip</code> 命令解压缩文件：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">unzip</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> master.zip</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>这将会创建一个名为 <code>vulhub-master</code> 的文件夹，里面包含了所有的 Vulhub 文件。</p><h3 id="步骤-5-进入-vulhub-目录" tabindex="-1"><a class="header-anchor" href="#步骤-5-进入-vulhub-目录"><span>步骤 5：进入 Vulhub 目录</span></a></h3><p>解压缩后，进入到 Vulhub 目录：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">cd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> vulhub-master</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="步骤-6-使用-vulhub" tabindex="-1"><a class="header-anchor" href="#步骤-6-使用-vulhub"><span>步骤 6：使用 Vulhub</span></a></h3><p>现在你可以根据需要使用其中的 Docker 配置文件和其他资源。</p><h3 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h3><p>通过以上步骤，你可以在 CentOS 上不使用 Git 的情况下成功下载和使用 Vulhub。如果你有其他问题或需要进一步的帮助，请随时告诉我！</p><hr><h1 id="面向对象" tabindex="-1"><a class="header-anchor" href="#面向对象"><span>面向对象</span></a></h1><p>类是创建对象的模版：（以一套特定的规则来创建对象的模版）<br> 对象是类的实例（在特定的规则下所创建的对象）</p><p>#非primitive变量只会将变量名保存在栈上，而对象在堆上</p><p>子类继承的方法可以被覆盖，实例变量不可以被覆盖</p><h2 id="super关键字-了解了前两个使用方法" tabindex="-1"><a class="header-anchor" href="#super关键字-了解了前两个使用方法"><span>super关键字(了解了前两个使用方法)</span></a></h2><p>在 Java 中，<code>super</code> 关键字是一个非常重要的概念，主要用于访问父类的属性和方法。它在继承关系中起着关键作用，允许子类与父类之间进行交互。以下是对 <code>super</code> 关键字的详细解释：</p><h3 id="_1-访问父类的属性" tabindex="-1"><a class="header-anchor" href="#_1-访问父类的属性"><span>1. 访问父类的属性</span></a></h3><p>当子类和父类中有同名的实例变量时，可以使用 <code>super</code> 关键字来区分它们。通过 <code>super</code>，子类可以访问父类的实例变量。</p><h3 id="_2-访问父类的方法" tabindex="-1"><a class="header-anchor" href="#_2-访问父类的方法"><span>2. 访问父类的方法</span></a></h3><p>如果子类重写了父类的方法，但在某些情况下仍然需要调用父类的方法，可以使用 <code>super</code> 关键字来实现。</p><h3 id="_3-调用父类的构造函数" tabindex="-1"><a class="header-anchor" href="#_3-调用父类的构造函数"><span>3. 调用父类的构造函数</span></a></h3><p>在子类的构造函数中，可以使用 <code>super()</code> 来调用父类的构造函数。这通常用于初始化父类的属性。</p><h2 id="this关键字" tabindex="-1"><a class="header-anchor" href="#this关键字"><span>this关键字：</span></a></h2><p>前提：this的使用在一个方法里，且存在一个类，用this.变量名来访问实例变量的值<br> 目的：改变实例变量，然后可以用改变后的实例变量进行操作</p><h1 id="new关键字" tabindex="-1"><a class="header-anchor" href="#new关键字"><span>new关键字：</span></a></h1><p>格式：类名 对象名(这会将dog类的实例化对象的引用传递给这个变量名，即可以将此变量名当成类名使用) = new 方法名(在指定类中的方法) 参数</p><h1 id="fastjson序列化" tabindex="-1"><a class="header-anchor" href="#fastjson序列化"><span>fastjson序列化</span></a></h1><p>主要的 API ：JSON.toJSONString<br> 本质：将实例化的对象进行单独构建一个类（因为json不支持多态），并且会在构建时调用getter方法来获取此时的实例变量</p><h1 id="fastjson反序列化" tabindex="-1"><a class="header-anchor" href="#fastjson反序列化"><span>fastjson反序列化</span></a></h1><p>主要的 API ：JSON.parseObject()和JSON.parse()，前者会调用get方法，后者不会<br> 本质：会执行json中@type的指定类的setter和getter(如果是JSON.parseObject())方法，并转换为jsonobject类</p><h1 id="注意事项" tabindex="-1"><a class="header-anchor" href="#注意事项"><span>注意事项</span></a></h1><p><strong>使用 <code>JSON.parse(jsonString)</code> 和 <code>JSON.parseObject(jsonString, Target.class)</code>，两者调用链一致，前者会在 jsonString 中解析字符串获取 <code>@type</code> 指定的类，后者则会直接使用参数中的class。</strong></p><h1 id="自动调用setter或getter的条件" tabindex="-1"><a class="header-anchor" href="#自动调用setter或getter的条件"><span>自动调用setter或getter的条件</span></a></h1><ul><li>其中 getter 方法需满足条件：方法名长于 4、不是静态方法、以 <code>get</code> 开头且第4位是大写字母、方法不能有参数传入、继承自特定类，此属性没有 setter 方法；<br> 特定类：<code>Collection|Map|AtomicBoolean|AtomicInteger|AtomicLong</code></li><li>setter 方法需满足条件：方法名长于 4，以 <code>set</code> 开头且第4位是大写字母、非静态方法、返回类型为 void 或当前类、参数个数为 1 个。具体逻辑在 <code>com.alibaba.fastjson.util.JavaBeanInfo.build()</code> 中。<br> 若是没有setter方法，依旧想在反序列化时给变量赋值，则用<code>Feature.SupportNonPublicField</code> 参数。<br> fastjson因为引进了AutoType功能，在对json字符串反序列化的时候，会读取到type到内容，将json内容反序列化为java对象并<strong>调用这个类的setter方法。</strong></li></ul>',51)]))}const d=s(n,[["render",l],["__file","fastjson.html.vue"]]),o=JSON.parse('{"path":"/article/04_%E5%BD%92%E6%A1%A3/fastjson.html","title":"fastjson","lang":"zh-CN","frontmatter":{"icon":"pen-to-square","date":"2024-12-10T00:00:00.000Z","category":["归档"],"tags":["漏洞"],"title":"fastjson","description":"搭建环境时出现的问题： SSL证书：因为直接恢复快照导致时间不对，从而导致ssl验证失败 pip不好用，直接用pip3可以解决问题 安装 Python 3 和 pip3：接下来，安装 Python 3 和 pip3。运行以下命令： 这将同时安装 Python 3 和 pip3。 验证安装：安装完成后，你可以通过以下命令验证 pip3 是否成功安装： 如...","head":[["meta",{"property":"og:url","content":"https://github.com/fakeppa/fakeppa.github.io/article/04_%E5%BD%92%E6%A1%A3/fastjson.html"}],["meta",{"property":"og:site_name","content":"问己"}],["meta",{"property":"og:title","content":"fastjson"}],["meta",{"property":"og:description","content":"搭建环境时出现的问题： SSL证书：因为直接恢复快照导致时间不对，从而导致ssl验证失败 pip不好用，直接用pip3可以解决问题 安装 Python 3 和 pip3：接下来，安装 Python 3 和 pip3。运行以下命令： 这将同时安装 Python 3 和 pip3。 验证安装：安装完成后，你可以通过以下命令验证 pip3 是否成功安装： 如..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-12-26T04:47:38.000Z"}],["meta",{"property":"article:tag","content":"漏洞"}],["meta",{"property":"article:published_time","content":"2024-12-10T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-12-26T04:47:38.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"fastjson\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-12-10T00:00:00.000Z\\",\\"dateModified\\":\\"2024-12-26T04:47:38.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"fakeppa\\",\\"url\\":\\"https://github.com/fakeppa/fakeppa.github.io\\"}]}"]]},"headers":[{"level":2,"title":"SSL证书：因为直接恢复快照导致时间不对，从而导致ssl验证失败","slug":"ssl证书-因为直接恢复快照导致时间不对-从而导致ssl验证失败","link":"#ssl证书-因为直接恢复快照导致时间不对-从而导致ssl验证失败","children":[]},{"level":2,"title":"搭建vulhub可用的方法：","slug":"搭建vulhub可用的方法","link":"#搭建vulhub可用的方法","children":[{"level":3,"title":"步骤 1：安装 wget（如果尚未安装）","slug":"步骤-1-安装-wget-如果尚未安装","link":"#步骤-1-安装-wget-如果尚未安装","children":[]},{"level":3,"title":"步骤 2：下载 Vulhub 压缩包","slug":"步骤-2-下载-vulhub-压缩包","link":"#步骤-2-下载-vulhub-压缩包","children":[]},{"level":3,"title":"步骤 3：安装 unzip（如果尚未安装）","slug":"步骤-3-安装-unzip-如果尚未安装","link":"#步骤-3-安装-unzip-如果尚未安装","children":[]},{"level":3,"title":"步骤 4：解压缩下载的文件","slug":"步骤-4-解压缩下载的文件","link":"#步骤-4-解压缩下载的文件","children":[]},{"level":3,"title":"步骤 5：进入 Vulhub 目录","slug":"步骤-5-进入-vulhub-目录","link":"#步骤-5-进入-vulhub-目录","children":[]},{"level":3,"title":"步骤 6：使用 Vulhub","slug":"步骤-6-使用-vulhub","link":"#步骤-6-使用-vulhub","children":[]},{"level":3,"title":"总结","slug":"总结","link":"#总结","children":[]}]},{"level":2,"title":"super关键字(了解了前两个使用方法)","slug":"super关键字-了解了前两个使用方法","link":"#super关键字-了解了前两个使用方法","children":[{"level":3,"title":"1. 访问父类的属性","slug":"_1-访问父类的属性","link":"#_1-访问父类的属性","children":[]},{"level":3,"title":"2. 访问父类的方法","slug":"_2-访问父类的方法","link":"#_2-访问父类的方法","children":[]},{"level":3,"title":"3. 调用父类的构造函数","slug":"_3-调用父类的构造函数","link":"#_3-调用父类的构造函数","children":[]}]},{"level":2,"title":"this关键字：","slug":"this关键字","link":"#this关键字","children":[]}],"git":{"createdTime":1734598464000,"updatedTime":1735188458000,"contributors":[{"name":"fakeppa","username":"fakeppa","email":"l17091799155@qq.com","commits":236,"url":"https://github.com/fakeppa"}]},"readingTime":{"minutes":4.58,"words":1373},"filePathRelative":"article/04_归档/fastjson.md","localizedDate":"2024年12月10日","excerpt":"\\n<h2>SSL证书：因为直接恢复快照导致时间不对，从而导致ssl验证失败</h2>\\n<pre><code> ### 1. 安装`ntp`服务\\n\\n首先，确保你的系统安装了`ntp`（网络时间协议）服务。可以使用以下命令安装：\\n\\n```bash\\nsudo yum install ntp\\n```\\n\\n### 2. 启动并启用`ntp`服务\\n\\n安装完成后，启动`ntp`服务并设置为开机自启：\\n\\n```bash\\nsudo systemctl start ntpd\\nsudo systemctl enable ntpd\\n</code></pre>\\n<ul>\\n<li>\\n<h1>pip不好用，直接用pip3可以解决问题</h1>\\n<ol>\\n<li>\\n<p><strong>安装 Python 3 和 pip3</strong>：接下来，安装 Python 3 和&nbsp;<code>pip3</code>。运行以下命令：</p>\\n<div class=\\"language-bash line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"bash\\" data-title=\\"bash\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">sudo</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> yum</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> install</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> python3</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div></div></div><p>这将同时安装 Python 3 和&nbsp;<code>pip3</code>。</p>\\n</li>\\n<li>\\n<p><strong>验证安装</strong>：安装完成后，你可以通过以下命令验证&nbsp;<code>pip3</code>&nbsp;是否成功安装：</p>\\n<div class=\\"language-bash line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"bash\\" data-title=\\"bash\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">pip3</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\"> --version</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div></div></div><p>如果安装成功，你将看到&nbsp;<code>pip3</code>&nbsp;的版本信息。</p>\\n</li>\\n</ol>\\n</li>\\n</ul>","autoDesc":true}');export{d as comp,o as data};
