import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,b as p,a as n,o as r}from"./app-DYLXHfqT.js";const o={};function i(l,e){return r(),a("div",null,e[0]||(e[0]=[p('<p>29,953 users solved<br> Author: syreal</p><h4 id="description" tabindex="-1"><a class="header-anchor" href="#description"><span>Description</span></a></h4><p><a href="https://mercury.picoctf.net/static/a6d9cac3bfa4935ceb50c145d3ff5586/keygenme-trial.py" target="_blank" rel="noopener noreferrer">keygenme-trial.py</a></p><h1 id="_00-前言" tabindex="-1"><a class="header-anchor" href="#_00-前言"><span>00. 前言</span></a></h1><p>本题用python编程，很抱歉的是，我的python功底很差，还有就是python环境还是不全，以后要补齐环境，并且有些函数仍然需要上互联网查询，所以这题也浪费了很长时间</p><hr><h1 id="_01-解题过程" tabindex="-1"><a class="header-anchor" href="#_01-解题过程"><span>01. 解题过程</span></a></h1><p>分析代码入口点<code>ui_flow()</code><br><img src="https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20241223174546.png" alt="image.png" loading="lazy"><br> 根据函数摸到了menu逻辑部分<code>menu_trial()</code><br><img src="https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20241223174631.png" alt="image.png" loading="lazy"></p><p>从menu的逻辑部分摸到了a,b,c,d具体的作用<br><img src="https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20241223174721.png" alt="image.png" loading="lazy"><br><code>随后根据a,b,d调用的函数发现了a,b,d都是空壳，只有c程序有用</code></p><p>这是c的代码<br><img src="https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20241223174854.png" alt="image.png" loading="lazy"><br> 发现了输入密钥的逻辑，他会拿着我们的user_key去进行一个check_key的操作,并传入一个全局变量bUsername_trial<br> 于是我们去看看<code>bUsername_trial</code>是什么东西<br><img src="https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20241223175251.png" alt="image.png" loading="lazy"><br> 发现了字节码<code>b&quot;PRITCHARD&quot;</code></p><p>好了，让我们进入<code>check_key</code>吧<br><img src="https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20241223175418.png" alt="image.png" loading="lazy"><br> 这看起来有些复杂，让我们从头开始<br> 首先他声明了一个全局变量<code>key_full_template_trial</code><br> 去找<code>key_full_template_trial</code><br><img src="https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20241223175634.png" alt="image.png" loading="lazy"><br> 发现了<code>key_full_template_trial</code>由三部分组成，如上图<br> 我们把它组合起来：<code>picoCTF{1n_7h3_|&lt;3y_of_xxxxxxxx}</code>这看起来是flag格式<br> 同时我们注意到了<code>key_part_static1_trial</code>这也是需要用到的内容。<br> 别忘了<code>bUsername_trial</code>=<code>b&quot;PRITCHARD&quot;</code></p><p>我把check_key代码分成三部分</p><ul><li>第一部分<br><img src="https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20241223175928.png" alt="image.png" loading="lazy"><br><em>检查key的长度是否和<code>key_full_template_trial</code>相等</em></li><li>第二部分<br><img src="https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20241223180212.png" alt="image.png" loading="lazy"><br> 检查key的第一部分(<code>key_full_template_trial</code>被分成了三部分)是否与<code>key_full_template_trial</code>的第一部分，也就是<code>key_part_static1_trial</code>相等，于是，我们便获得了第一部分key：`picoCTF{1n_7h3_|&lt;3y_of_</li><li>第三部分<br><img src="https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20241223180454.png" alt="image.png" loading="lazy"><br> 这里的i是从上面传递下来的，也就是检查key第一部分之后的内容<br> 可以看到它对<code>bUsername_trial</code>计算了SHA-256值，并将结果转化为16进制，然后分别取了4、5、3、6、2、7、1、8索引的位置，然后我们知道了</li></ul>',13),n("p",{"1n_7h3_|&lt;3y_of_54ef6292":""},"picoCTF",-1)]))}const s=t(o,[["render",i],["__file","keygenme-py.html.vue"]]),d=JSON.parse('{"path":"/article/01_%E9%A1%B9%E7%9B%AE/picoCTF/%E9%80%86%E5%90%91reverse/keygenme-py.html","title":"keygenme-py","lang":"zh-CN","frontmatter":{"icon":"pen-to-square","date":"2024-12-23T00:00:00.000Z","tags":null,"title":"keygenme-py","category":["项目"],"description":"29,953 users solved Author: syreal Description keygenme-trial.py 00. 前言 本题用python编程，很抱歉的是，我的python功底很差，还有就是python环境还是不全，以后要补齐环境，并且有些函数仍然需要上互联网查询，所以这题也浪费了很长时间 01. 解题过程 分析代码入口点ui_...","head":[["meta",{"property":"og:url","content":"https://github.com/fakeppa/fakeppa.github.io/article/01_%E9%A1%B9%E7%9B%AE/picoCTF/%E9%80%86%E5%90%91reverse/keygenme-py.html"}],["meta",{"property":"og:site_name","content":"问己"}],["meta",{"property":"og:title","content":"keygenme-py"}],["meta",{"property":"og:description","content":"29,953 users solved Author: syreal Description keygenme-trial.py 00. 前言 本题用python编程，很抱歉的是，我的python功底很差，还有就是python环境还是不全，以后要补齐环境，并且有些函数仍然需要上互联网查询，所以这题也浪费了很长时间 01. 解题过程 分析代码入口点ui_..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20241223174546.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:published_time","content":"2024-12-23T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"keygenme-py\\",\\"image\\":[\\"https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20241223174546.png\\",\\"https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20241223174631.png\\",\\"https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20241223174721.png\\",\\"https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20241223174854.png\\",\\"https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20241223175251.png\\",\\"https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20241223175418.png\\",\\"https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20241223175634.png\\",\\"https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20241223175928.png\\",\\"https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20241223180212.png\\",\\"https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20241223180454.png\\"],\\"datePublished\\":\\"2024-12-23T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"fakeppa\\",\\"url\\":\\"https://github.com/fakeppa/fakeppa.github.io\\"}]}"]]},"headers":[],"git":{},"readingTime":{"minutes":1.77,"words":530},"filePathRelative":"article/01_项目/picoCTF/逆向reverse/keygenme-py.md","localizedDate":"2024年12月23日","excerpt":"<p>29,953&nbsp;users solved<br>\\nAuthor:&nbsp;syreal</p>\\n<h4>Description</h4>\\n<p><a href=\\"https://mercury.picoctf.net/static/a6d9cac3bfa4935ceb50c145d3ff5586/keygenme-trial.py\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">keygenme-trial.py</a></p>\\n<h1>00. 前言</h1>\\n<p>本题用python编程，很抱歉的是，我的python功底很差，还有就是python环境还是不全，以后要补齐环境，并且有些函数仍然需要上互联网查询，所以这题也浪费了很长时间</p>","autoDesc":true}');export{s as comp,d as data};
