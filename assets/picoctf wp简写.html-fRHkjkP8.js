import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,b as n,o as a}from"./app-x9_I2zrM.js";const l={};function o(p,e){return a(),t("div",null,e[0]||(e[0]=[n(`<h1 id="picoctf" tabindex="-1"><a class="header-anchor" href="#picoctf"><span>picoCTF</span></a></h1><ol><li><p>introtoburp 二次验证界面修改参数名</p></li><li><p>bookmarklet 复制js代码到浏览器控制台执行即可</p></li><li><p>local authority 查看源代码</p></li><li><p>cookie 用开发者工具更改cookie并刷新</p></li><li><p>Scavenger Hunt 查看源代码拼凑即可，但是js界面提示这个/* How can I keep Google from indexing my website? */<br> 要防止Google索引您的网站，可以采取以下几种方法：</p></li><li><p><strong>使用robots.txt文件</strong>： 在网站的根目录下创建一个名为<code>robots.txt</code>的文件，并添加以下内容：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">User-agent:</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> *</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Disallow:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>这将告诉所有搜索引擎的爬虫不允许访问您网站的任何页面。</p><p>所以用url进入robots.txt文档,但是发现文字,提示使用apache组为服务器<br> 那么访问.htaccess<br><code>.htaccess</code> 文件是 Apache 服务器中用于配置目录级别的设置的文件。它允许用户在不修改主配置文件的情况下，控制网站的行为。<br> 继续发现文字：I love making websites on my Mac, I can Store a lot of information there.<br> 提示mac系统则用到一个.DS_Store目录<br><code>.DS_Store</code> 是 macOS 操作系统自动生成的隐藏文件，用于存储文件夹的自定义属性和设置，例如图标位置、窗口大小和背景图像等。<br> 随后拼接即可</p></li><li><p>GET aHEAD:将POST或GET请求改为HEAD请求即可</p></li><li><p>logon:修改cookie值，但是抓包改头也行:把admin：FALSE改为 admin:TRUE即可</p></li><li><p>#Secret of the Polyglot:下载文件后用file检查文件格式即可</p></li><li><p>#Super_SSH :直接连接ssh即可</p></li><li><p>#git Collaborative Development：查看分支并切换即可</p></li><li><p>#git Blame Game:查看日志时候添加查看内容的参数即可</p></li><li><p>binhexa：注意二进制添加0b</p></li><li><p>#grep Big Zip:用grep进行递归搜索</p></li><li><p>Tab, Tab, Attack:在多级的冗杂文件目录中，可以通过tab键自动补全文件名，elf为linux的可执行文件，在用<code>chmod +x filename</code>赋予权限后，可以用<code>./filename</code>执行程序</p></li><li><p>#netcat what&#39;s a net cat?:学习更多关于netcat的知识</p></li><li><p>Trickster:抓包然后在png图片末尾另起一行写入木马</p></li><li><p>#nosql-inject No Sql Injection:查看server.js观察源码，获得账户邮件，随后运用{&quot;$ne&quot;: null}言注入</p></li><li><p>#xml外部实体注入 SOAP:xml注入即可，有回显，需要找key</p></li><li><p>#java代码分析 #JWT Java Code Analysis!?!</p></li><li><p>#JWT JAuth：JWT在cookie中，可以更改保存网站没有验证：空加密算法的设计初衷是用于调试的，但是如果某天开发人员脑阔瓦特了，在生产环境中开启了空加密算法，缺少签名算法，jwt保证信息不被篡改的功能就失效了。攻击者只需要把alg字段设置为None，就可以在payload中构造身份信息，伪造用户身份，这样甚至不用填写加密签名了</p></li><li><p>#xor Some Assembly Required 2:查看源代码，查看wasm，获得xor密文</p></li><li><p>Web Gauntlet:sql注入题，有5管关，每关的禁用字符都不同</p></li></ol><ul><li><p>第一关（<strong>or</strong>）：直接输入username的<code>admin‘ --</code>，即可</p></li><li><p>第二关（<strong>or and like = –</strong>）：需要构造语句：<code>admin&#39; union select * from users where &#39;1</code> where后面语句一直为真，所以从 <code>users</code> 表中选择所有用户名为 <code>admin</code> 的记录。</p></li><li><p>第三关（<strong>or and = like &gt; &lt; –</strong>）：直接构造语句<code>admin&#39;;</code>，因为启用了多语句设置，可以进行分号，将AND password=&#39;1’进行无效化</p></li><li><p>第四关（<strong>or and = like &gt; &lt; – admin</strong>）：<code>ad&#39;||&#39;min&#39;;</code> 延续第三关的思路，将admin进行连接操作，||为字符串连接操作符</p></li><li><p>第五关（<strong>or and = like &gt; &lt; – union admin</strong>）：<code>ad&#39;||&#39;min&#39;;</code>延续上一关的输入，以不变应万变</p></li></ul><ol><li><p>Web Gauntlet2（<strong><code>or and true false union like = &gt; &lt; ; -- /* */ admin</code></strong>）：<br> username:<code>ad&#39;||&#39;min</code>但是不能用分号了，所以构造密码语句。<br> password:<code>&#39; glob &#39;*</code><br><code>glob &#39;*&#39;</code>：这一条件使用了 <code>glob</code> 操作符，表示匹配所有密码。</p></li><li><p>Web Gauntlet3(<strong><code>or and true false union like = &gt; &lt; ; -- /* */ admin</code></strong>）：和2一样的过滤条件，只是好像火狐浏览器有正确无法</p></li><li><p>#CBC位翻攻击 More Cookies：不知为何，这题的提示指向了同态加密，显然是不对的，这题需要借助CBC位翻攻击，攻击cookie</p></li><li><p>#MD5 It is my Birthday:提交两个相同md5的pdf即可</p></li><li><p>#sql Irish-Name-Repo 3:先抓包，发现有debug关键词，然后设置值为0，放，看到回显，然后发现有简单的加密，构造万能密码即可<code>&#39;or 1=1--</code></p></li><li><p>#exiftool Mob psycho:这是一道misc题，需要在本地更改图片原信息，然后上传到服务器验证，本关以闯关形式展示<br> 前六关可以用exiftool更改元数据，所以不做赘述<br><img src="https://cdn.jsdelivr.net/gh/fakeppa/blog-img/S127S.png" alt="image.png" loading="lazy"></p><p>最后一关按照惯例更改，发现不可以改，于是搜索exiftool官网不可改的标签<a href="https://exiftool.org/TagNames/Samsung.html" target="_blank" rel="noopener noreferrer">三星标签</a> <img src="https://cdn.jsdelivr.net/gh/fakeppa/blog-img/U31289467128617293541.png" alt="image.png" loading="lazy"><br> 了解到不能写可能是因为读写策略。。。，但是可以在16进制编辑工具中更改<br> 最后在图片的最后发现了Image Date，很奇怪的日期1700513181420，百度一下可以发现是纪元时间，纪元时间从 1970 年开始，因此要设置为0，随后用0占位，更改为0000000000001即可<a href="https://www.epochconverter.com/" target="_blank" rel="noopener noreferrer">世纪时间戳阅读工具</a></p><p>通关图片:<br><a href="https://cdn.jsdelivr.net/gh/fakeppa/blog-img/original.jpg" target="_blank" rel="noopener noreferrer">https://cdn.jsdelivr.net/gh/fakeppa/blog-img/original.jpg</a></p></li><li><p>Mob psycho：本题用unzip 解压apk包，然后用find命令递归查找flag</p></li></ol><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">find</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> .</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -type</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> f</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;flag*&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>打开，发现是一串十六进制数字，解密发现flag<br> 31. endianness-v2：根据描述可知，从32位的系统中恢复的文件，还说到字节组织的方式很奇怪，可知，这个文件应该通过交换字节序解决。<br><img src="https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20241213192402.png" alt="image.png" loading="lazy"><br> 32. MSB:打开附件图片发现有图片颜色有问题，所以可以判断这是一道图片rgb通道隐写题，通过StegSolve-1.4工具，可以单独查看图片的颜色通道，随后用内置的16进制查看器，发现rgb通道7有数据，导出后搜索pico可以发现flag<br> 33. #binwalk hideme:发现一张图片，尝试16进制查看，查看颜色通道，查看exif，都没有发现有用信息，最后用了binwalk查看隐写压缩文件，最后发现文件<br> 34. #流量分析 FindAndOpen：本题需要观察每一个流量包，查看date内容是否可疑，然后可以发现一个全部由base64编码的文件，解码文件后可以看到picoCTF字段的内容，这就是密码，解开zip文件可以看到flag<br> 35. #python代码审计 Python Wrangling：对源码进行审计，输入对应的参数及解密文档，可以获得flag</p>`,6)]))}const c=i(l,[["render",o],["__file","picoctf wp简写.html.vue"]]),d=JSON.parse(`{"path":"/article/02_%E9%A2%86%E5%9F%9F/picoCTF/picoctf%20wp%E7%AE%80%E5%86%99.html","title":"picoctf wp","lang":"zh-CN","frontmatter":{"icon":"pen-to-square","date":"2024-12-10T00:00:00.000Z","category":["项目"],"tags":["持续进行"],"title":"picoctf wp","description":"picoCTF introtoburp 二次验证界面修改参数名 bookmarklet 复制js代码到浏览器控制台执行即可 local authority 查看源代码 cookie 用开发者工具更改cookie并刷新 Scavenger Hunt 查看源代码拼凑即可，但是js界面提示这个/* How can I keep Google from ind...","head":[["meta",{"property":"og:url","content":"https://github.com/fakeppa/fakeppa.github.io/article/02_%E9%A2%86%E5%9F%9F/picoCTF/picoctf%20wp%E7%AE%80%E5%86%99.html"}],["meta",{"property":"og:site_name","content":"问己"}],["meta",{"property":"og:title","content":"picoctf wp"}],["meta",{"property":"og:description","content":"picoCTF introtoburp 二次验证界面修改参数名 bookmarklet 复制js代码到浏览器控制台执行即可 local authority 查看源代码 cookie 用开发者工具更改cookie并刷新 Scavenger Hunt 查看源代码拼凑即可，但是js界面提示这个/* How can I keep Google from ind..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://cdn.jsdelivr.net/gh/fakeppa/blog-img/S127S.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-12-25T10:52:31.000Z"}],["meta",{"property":"article:tag","content":"持续进行"}],["meta",{"property":"article:published_time","content":"2024-12-10T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-12-25T10:52:31.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"picoctf wp\\",\\"image\\":[\\"https://cdn.jsdelivr.net/gh/fakeppa/blog-img/S127S.png\\",\\"https://cdn.jsdelivr.net/gh/fakeppa/blog-img/U31289467128617293541.png\\",\\"https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20241213192402.png\\"],\\"datePublished\\":\\"2024-12-10T00:00:00.000Z\\",\\"dateModified\\":\\"2024-12-25T10:52:31.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"fakeppa\\",\\"url\\":\\"https://github.com/fakeppa/fakeppa.github.io\\"}]}"]]},"headers":[],"git":{"createdTime":1734952038000,"updatedTime":1735123951000,"contributors":[{"name":"fakeppa","username":"fakeppa","email":"l17091799155@qq.com","commits":52,"url":"https://github.com/fakeppa"}]},"readingTime":{"minutes":5.7,"words":1711},"filePathRelative":"article/02_领域/picoCTF/picoctf wp简写.md","localizedDate":"2024年12月10日","excerpt":"\\n<ol>\\n<li>\\n<p>introtoburp 二次验证界面修改参数名</p>\\n</li>\\n<li>\\n<p>bookmarklet 复制js代码到浏览器控制台执行即可</p>\\n</li>\\n<li>\\n<p>local authority 查看源代码</p>\\n</li>\\n<li>\\n<p>cookie 用开发者工具更改cookie并刷新</p>\\n</li>\\n<li>\\n<p>Scavenger Hunt 查看源代码拼凑即可，但是js界面提示这个/* How can I keep Google from indexing my website? */<br>\\n要防止Google索引您的网站，可以采取以下几种方法：</p>\\n</li>\\n<li>\\n<p><strong>使用robots.txt文件</strong>： 在网站的根目录下创建一个名为<code>robots.txt</code>的文件，并添加以下内容：</p>\\n<div class=\\"language-bash line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"bash\\" data-title=\\"bash\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">User-agent:</span><span style=\\"--shiki-light:#E45649;--shiki-dark:#E5C07B\\"> *</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">Disallow:</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> /</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div><p>这将告诉所有搜索引擎的爬虫不允许访问您网站的任何页面。</p>\\n<p>所以用url进入robots.txt文档,但是发现文字,提示使用apache组为服务器<br>\\n那么访问.htaccess<br>\\n<code>.htaccess</code>&nbsp;文件是 Apache 服务器中用于配置目录级别的设置的文件。它允许用户在不修改主配置文件的情况下，控制网站的行为。<br>\\n继续发现文字：I love making websites on my Mac, I can Store a lot of information there.<br>\\n提示mac系统则用到一个.DS_Store目录<br>\\n<code>.DS_Store</code>&nbsp;是 macOS 操作系统自动生成的隐藏文件，用于存储文件夹的自定义属性和设置，例如图标位置、窗口大小和背景图像等。<br>\\n随后拼接即可</p>\\n</li>\\n<li>\\n<p>GET aHEAD:将POST或GET请求改为HEAD请求即可</p>\\n</li>\\n<li>\\n<p>logon:修改cookie值，但是抓包改头也行:把admin：FALSE改为 admin:TRUE即可</p>\\n</li>\\n<li>\\n<p>#Secret of the Polyglot:下载文件后用file检查文件格式即可</p>\\n</li>\\n<li>\\n<p>#Super_SSH :直接连接ssh即可</p>\\n</li>\\n<li>\\n<p>#git Collaborative Development：查看分支并切换即可</p>\\n</li>\\n<li>\\n<p>#git  Blame Game:查看日志时候添加查看内容的参数即可</p>\\n</li>\\n<li>\\n<p>binhexa：注意二进制添加0b</p>\\n</li>\\n<li>\\n<p>#grep Big Zip:用grep进行递归搜索</p>\\n</li>\\n<li>\\n<p>Tab, Tab, Attack:在多级的冗杂文件目录中，可以通过tab键自动补全文件名，elf为linux的可执行文件，在用<code>chmod +x filename</code>赋予权限后，可以用<code>./filename</code>执行程序</p>\\n</li>\\n<li>\\n<p>#netcat what's a net cat?:学习更多关于netcat的知识</p>\\n</li>\\n<li>\\n<p>Trickster:抓包然后在png图片末尾另起一行写入木马</p>\\n</li>\\n<li>\\n<p>#nosql-inject No Sql Injection:查看server.js观察源码，获得账户邮件，随后运用{\\"$ne\\": null}言注入</p>\\n</li>\\n<li>\\n<p>#xml外部实体注入 SOAP:xml注入即可，有回显，需要找key</p>\\n</li>\\n<li>\\n<p>#java代码分析  #JWT Java Code Analysis!?!</p>\\n</li>\\n<li>\\n<p>#JWT JAuth：JWT在cookie中，可以更改保存网站没有验证：空加密算法的设计初衷是用于调试的，但是如果某天开发人员脑阔瓦特了，在生产环境中开启了空加密算法，缺少签名算法，jwt保证信息不被篡改的功能就失效了。攻击者只需要把alg字段设置为None，就可以在payload中构造身份信息，伪造用户身份，这样甚至不用填写加密签名了</p>\\n</li>\\n<li>\\n<p>#xor Some Assembly Required 2:查看源代码，查看wasm，获得xor密文</p>\\n</li>\\n<li>\\n<p>Web Gauntlet:sql注入题，有5管关，每关的禁用字符都不同</p>\\n</li>\\n</ol>","autoDesc":true}`);export{c as comp,d as data};
