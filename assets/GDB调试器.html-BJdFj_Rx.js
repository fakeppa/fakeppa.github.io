import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as r,b as a,o as n}from"./app-DgYnJ2OQ.js";const i={};function o(p,e){return n(),r("div",null,e[0]||(e[0]=[a('<p><em><strong>GDB</strong>是</em><em>Linux</em><em>下非常好用且强大的</em><em>调试工具</em>*。GDB可以调试C、C++、Go、java、 objective-c、PHP等语言。* <strong>GDB</strong> 是由 GUN 软件系统社区提供的<strong>调试工具</strong>，同 GCC 配套组成了一套完整的开发环境，GDB 是 Linux 和许多 类Unix系统的标准开发环境。</p><h1 id="gdb调试代码-指令学习" tabindex="-1"><a class="header-anchor" href="#gdb调试代码-指令学习"><span>GDB调试代码----指令学习</span></a></h1><p>括号内是指令全称<br><code>l(list)</code> -----行号/函数名显示对应的code，每次十行<br> r(run) ----F5 【无断点直接运行、右端点从第一个断点开始运行】<br> b(breakpoint) + 行号 ----在那一行打断点<br> b 源文件：函数名 ----在该函数的第一行打上断点<br> b 源文件：行号 ----在该源文件中的这行加上一个断点<br> info b ----查看断点信息<br> breakpoint already hit 1 time【此断点被命中一次】<br> d(delete) + 当前要删除断点的编号 ----删除一个断点【不可以d+行号】</p><ul><li>若当前没有跳出过gdb，则断点的编号会持续累加<br> d +breakpoints ----删除所有的断点<br> disable b(breakpoints) ----使所有的断点无效【默认缺省】<br> enable b(breakpoints) ----使所有断点有效【默认缺省】<br> disable b(breakpoints) + 编号 ----使一个断点无效【禁用断点】 <ul><li>相当于VS中的空断点<br> enable b(breakpoint ) + 编号 ----使一个断点有效【开启断点】<br> enable breakpoint ---- 是一个断点有效【开启断点】<br> n(next) ----逐过程【为了查找那个函数出错了】<br> s(step) ---- 逐语句<br> bt ----看底层函数调用的过程【函数压栈】<br> set var ----修改变量的值<br> p(print) 变量名 ----打印变量值<br> display ----跟踪查看同一个变量，每次停下来都显示他的值【变量/结构体】<br> undisplay + 变量名编号 ----取消对先前设置的那些变量的追踪<br> 排查问题三剑客<br> undisplay + 行号 ----进行指定位置跳转，执行完区间代码<br> finish ----在一个函数内部，执行当前函数返回，然后停下来等待命令<br> c(continue) ----从一个断点处，直接运行至下一个断点处</li></ul></li></ul><h1 id="参考链接" tabindex="-1"><a class="header-anchor" href="#参考链接"><span>参考链接</span></a></h1><p><a href="https://blog.csdn.net/weixin_45031801/article/details/134399664?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522ed9619238481455b323ade1e13941f03%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=ed9619238481455b323ade1e13941f03&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-134399664-null-null.142%5Ev100%5Epc_search_result_base3&amp;utm_term=GDB&amp;spm=1018.2226.3001.4187" target="_blank" rel="noopener noreferrer">【Linux】GDB保姆级调试指南（什么是GDB？GDB如何使用？）_gdb教程-CSDN博客</a></p>',6)]))}const l=t(i,[["render",o],["__file","GDB调试器.html.vue"]]),c=JSON.parse('{"path":"/article/03_%E8%B5%84%E6%BA%90/GDB%E8%B0%83%E8%AF%95%E5%99%A8.html","title":"GDB调试器","lang":"zh-CN","frontmatter":{"icon":"pen-to-square","date":"2025-01-03T00:00:00.000Z","tags":["TOOL"],"title":"GDB调试器","category":["资源"],"description":"GDB是Linux下非常好用且强大的调试工具*。GDB可以调试C、C++、Go、java、 objective-c、PHP等语言。* GDB 是由 GUN 软件系统社区提供的调试工具，同 GCC 配套组成了一套完整的开发环境，GDB 是 Linux 和许多 类Unix系统的标准开发环境。 GDB调试代码----指令学习 括号内是指令全称 l(list)...","head":[["meta",{"property":"og:url","content":"https://github.com/fakeppa/fakeppa.github.io/article/03_%E8%B5%84%E6%BA%90/GDB%E8%B0%83%E8%AF%95%E5%99%A8.html"}],["meta",{"property":"og:site_name","content":"问己"}],["meta",{"property":"og:title","content":"GDB调试器"}],["meta",{"property":"og:description","content":"GDB是Linux下非常好用且强大的调试工具*。GDB可以调试C、C++、Go、java、 objective-c、PHP等语言。* GDB 是由 GUN 软件系统社区提供的调试工具，同 GCC 配套组成了一套完整的开发环境，GDB 是 Linux 和许多 类Unix系统的标准开发环境。 GDB调试代码----指令学习 括号内是指令全称 l(list)..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-03-18T12:00:03.000Z"}],["meta",{"property":"article:tag","content":"TOOL"}],["meta",{"property":"article:published_time","content":"2025-01-03T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-03-18T12:00:03.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"GDB调试器\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-01-03T00:00:00.000Z\\",\\"dateModified\\":\\"2025-03-18T12:00:03.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"fakeppa\\",\\"url\\":\\"https://github.com/fakeppa/fakeppa.github.io\\"}]}"]]},"headers":[],"git":{"createdTime":1740732251000,"updatedTime":1742299203000,"contributors":[{"name":"fakeppa","username":"fakeppa","email":"l17091799155@qq.com","commits":133,"url":"https://github.com/fakeppa"}]},"readingTime":{"minutes":2.01,"words":603},"filePathRelative":"article/03_资源/GDB调试器.md","localizedDate":"2025年1月3日","excerpt":"<p><em><strong>GDB</strong>是</em><em>Linux</em><em>下非常好用且强大的</em><em>调试工具</em>*。GDB可以调试C、C++、Go、java、 objective-c、PHP等语言。*&nbsp;<strong>GDB</strong>&nbsp;是由&nbsp;GUN 软件系统社区提供的<strong>调试工具</strong>，同 GCC 配套组成了一套完整的开发环境，GDB 是 Linux 和许多 类Unix系统的标准开发环境。</p>\\n<h1>GDB调试代码----指令学习</h1>\\n<p>括号内是指令全称<br>\\n<code>l(list)</code>                            -----行号/函数名显示对应的code，每次十行<br>\\nr(run)                                  ----F5 【无断点直接运行、右端点从第一个断点开始运行】<br>\\nb(breakpoint) + 行号         ----在那一行打断点<br>\\nb 源文件：函数名              ----在该函数的第一行打上断点<br>\\nb 源文件：行号                  ----在该源文件中的这行加上一个断点<br>\\ninfo b                                  ----查看断点信息<br>\\nbreakpoint already hit 1 time【此断点被命中一次】<br>\\nd(delete) + 当前要删除断点的编号        ----删除一个断点【不可以d+行号】</p>","autoDesc":true}');export{l as comp,c as data};
