import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,b as p,o as n}from"./app-BbMTvYPC.js";const g={};function i(l,e){return n(),a("div",null,e[0]||(e[0]=[p('<p>一生之敌--线代</p><h2 id="最大无关组的求法" tabindex="-1"><a class="header-anchor" href="#最大无关组的求法"><span>最大无关组的求法</span></a></h2><p><img src="https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20250911234120.png" alt="image.png" loading="lazy"><br> 例题<br><img src="https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20250911234407.png" alt="image.png" loading="lazy"></p><h2 id="求方程组的解的个数" tabindex="-1"><a class="header-anchor" href="#求方程组的解的个数"><span>求方程组的解的个数</span></a></h2><p>判断是否常规<br><img src="https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20250912003547.png" alt="image.png" loading="lazy"></p><figure><img src="https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20250912003502.png" alt="image.png" tabindex="0" loading="lazy"><figcaption>image.png</figcaption></figure><p><img src="https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20250912003606.png" alt="image.png" loading="lazy"><br> 极大无关组求法<br> 化成行最简形式，然后</p>',7)]))}const m=t(g,[["render",i],["__file","线代.html.vue"]]),s=JSON.parse('{"path":"/article/04_%E5%BD%92%E6%A1%A3/%E8%80%83%E8%AF%95%E5%91%A8%E7%A0%B4%E9%98%B2/%E5%A4%A7%E4%B8%80%E4%B8%8B/%E7%BA%BF%E4%BB%A3.html","title":"线代","lang":"zh-CN","frontmatter":{"aliases":null,"cssclasses":null,"tags":null,"icon":"pen-to-square","date":"2025-09-11T00:00:00.000Z","title":"线代","category":["归档"],"description":"一生之敌--线代 最大无关组的求法 image.png 例题 image.png 求方程组的解的个数 判断是否常规 image.png image.pngimage.png image.png 极大无关组求法 化成行最简形式，然后","head":[["meta",{"property":"og:url","content":"https://github.com/fakeppa/fakeppa.github.io/article/04_%E5%BD%92%E6%A1%A3/%E8%80%83%E8%AF%95%E5%91%A8%E7%A0%B4%E9%98%B2/%E5%A4%A7%E4%B8%80%E4%B8%8B/%E7%BA%BF%E4%BB%A3.html"}],["meta",{"property":"og:site_name","content":"问己"}],["meta",{"property":"og:title","content":"线代"}],["meta",{"property":"og:description","content":"一生之敌--线代 最大无关组的求法 image.png 例题 image.png 求方程组的解的个数 判断是否常规 image.png image.pngimage.png image.png 极大无关组求法 化成行最简形式，然后"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20250911234120.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-09-11T19:00:25.000Z"}],["meta",{"property":"article:published_time","content":"2025-09-11T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-09-11T19:00:25.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"线代\\",\\"image\\":[\\"https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20250911234120.png\\",\\"https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20250911234407.png\\",\\"https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20250912003547.png\\",\\"https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20250912003502.png\\",\\"https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20250912003606.png\\"],\\"datePublished\\":\\"2025-09-11T00:00:00.000Z\\",\\"dateModified\\":\\"2025-09-11T19:00:25.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"fakeppa\\",\\"url\\":\\"https://github.com/fakeppa/fakeppa.github.io\\"}]}"]]},"headers":[{"level":2,"title":"最大无关组的求法","slug":"最大无关组的求法","link":"#最大无关组的求法","children":[]},{"level":2,"title":"求方程组的解的个数","slug":"求方程组的解的个数","link":"#求方程组的解的个数","children":[]}],"git":{"createdTime":1757605584000,"updatedTime":1757617225000,"contributors":[{"name":"fakeppa","username":"fakeppa","email":"l17091799155@qq.com","commits":3,"url":"https://github.com/fakeppa"}]},"readingTime":{"minutes":0.28,"words":84},"filePathRelative":"article/04_归档/考试周破防/大一下/线代.md","localizedDate":"2025年9月11日","excerpt":"<p>一生之敌--线代</p>\\n<h2>最大无关组的求法</h2>\\n<p><img src=\\"https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20250911234120.png\\" alt=\\"image.png\\" loading=\\"lazy\\"><br>\\n例题<br>\\n<img src=\\"https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20250911234407.png\\" alt=\\"image.png\\" loading=\\"lazy\\"></p>\\n<h2>求方程组的解的个数</h2>\\n<p>判断是否常规<br>\\n<img src=\\"https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20250912003547.png\\" alt=\\"image.png\\" loading=\\"lazy\\"></p>","autoDesc":true}');export{m as comp,s as data};
