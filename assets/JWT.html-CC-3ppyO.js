import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as o,b as n,o as p}from"./app-7HHn68th.js";const r={};function a(i,t){return p(),o("div",null,t[0]||(t[0]=[n('<h1 id="_01前言" tabindex="-1"><a class="header-anchor" href="#_01前言"><span>01前言</span></a></h1><p>现在，正视JWT，系统地了解什么是JWT</p><p>Head包含的字段</p><ol><li><p><strong>alg</strong>: 指定用于签名的算法，例如 <code>HS256</code>、<code>RS256</code> 等。这是一个必需字段。</p></li><li><p><strong>typ</strong>: 指定令牌的类型，通常为 <code>JWT</code>。这个字段是可选的，但通常会包含。</p></li><li><p><strong>kid</strong>: 指定密钥的标识符，用于在使用多个密钥时帮助接收方选择正确的密钥进行验证。这个字段是可选的。</p></li><li><p><strong>jku</strong>: 指定一个 URL，指向一个包含公钥的 JSON Web Key Set（JWKS）。这个字段也是可选的。</p></li><li><p><strong>x5u</strong>: 指向一个 X.509 证书的 URL，用于验证签名。这个字段是可选的。</p></li><li><p><strong>x5c</strong>: 包含一个 X.509 证书链的数组，用于验证签名。这个字段是可选的。</p></li><li><p><strong>x5t</strong>: 指定 X.509 证书的指纹，用于验证签名。这个字段是可选的。</p></li><li><p><strong>cty</strong>: 指定内容类型，通常用于嵌套 JWT。这个字段是可选的。</p></li></ol><p>这些字段共同构成了 JWT 的头部部分，通常以 JSON 格式表示，并在 JWT 的编码过程中进行 Base64Url 编码。JWT 的结构通常是由三部分组成：头部（Header）、载荷（Payload）和签名（Signature）。</p>',5)]))}const c=e(r,[["render",a],["__file","JWT.html.vue"]]),g=JSON.parse('{"path":"/article/01_%E9%A1%B9%E7%9B%AE/JWT.html","title":"JWT","lang":"zh-CN","frontmatter":{"icon":"pen-to-square","date":"2024-12-20T00:00:00.000Z","tags":null,"title":"JWT","category":["项目"],"description":"01前言 现在，正视JWT，系统地了解什么是JWT Head包含的字段 alg: 指定用于签名的算法，例如 HS256、RS256 等。这是一个必需字段。 typ: 指定令牌的类型，通常为 JWT。这个字段是可选的，但通常会包含。 kid: 指定密钥的标识符，用于在使用多个密钥时帮助接收方选择正确的密钥进行验证。这个字段是可选的。 jku: 指定一个 ...","head":[["meta",{"property":"og:url","content":"https://github.com/fakeppa/fakeppa.github.io/article/01_%E9%A1%B9%E7%9B%AE/JWT.html"}],["meta",{"property":"og:site_name","content":"问己"}],["meta",{"property":"og:title","content":"JWT"}],["meta",{"property":"og:description","content":"01前言 现在，正视JWT，系统地了解什么是JWT Head包含的字段 alg: 指定用于签名的算法，例如 HS256、RS256 等。这是一个必需字段。 typ: 指定令牌的类型，通常为 JWT。这个字段是可选的，但通常会包含。 kid: 指定密钥的标识符，用于在使用多个密钥时帮助接收方选择正确的密钥进行验证。这个字段是可选的。 jku: 指定一个 ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-12-20T06:00:42.000Z"}],["meta",{"property":"article:published_time","content":"2024-12-20T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-12-20T06:00:42.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"JWT\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-12-20T00:00:00.000Z\\",\\"dateModified\\":\\"2024-12-20T06:00:42.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"fakeppa\\",\\"url\\":\\"https://github.com/fakeppa/fakeppa.github.io\\"}]}"]]},"headers":[],"git":{"createdTime":1734674442000,"updatedTime":1734674442000,"contributors":[{"name":"fakeppa","username":"fakeppa","email":"l17091799155@qq.com","commits":1,"url":"https://github.com/fakeppa"}]},"readingTime":{"minutes":1.07,"words":321},"filePathRelative":"article/01_项目/JWT.md","localizedDate":"2024年12月20日","excerpt":"\\n<p>现在，正视JWT，系统地了解什么是JWT</p>\\n<p>Head包含的字段</p>\\n<ol>\\n<li>\\n<p><strong>alg</strong>: 指定用于签名的算法，例如&nbsp;<code>HS256</code>、<code>RS256</code>&nbsp;等。这是一个必需字段。</p>\\n</li>\\n<li>\\n<p><strong>typ</strong>: 指定令牌的类型，通常为&nbsp;<code>JWT</code>。这个字段是可选的，但通常会包含。</p>\\n</li>\\n<li>\\n<p><strong>kid</strong>: 指定密钥的标识符，用于在使用多个密钥时帮助接收方选择正确的密钥进行验证。这个字段是可选的。</p>\\n</li>\\n<li>\\n<p><strong>jku</strong>: 指定一个 URL，指向一个包含公钥的 JSON Web Key Set（JWKS）。这个字段也是可选的。</p>\\n</li>\\n<li>\\n<p><strong>x5u</strong>: 指向一个 X.509 证书的 URL，用于验证签名。这个字段是可选的。</p>\\n</li>\\n<li>\\n<p><strong>x5c</strong>: 包含一个 X.509 证书链的数组，用于验证签名。这个字段是可选的。</p>\\n</li>\\n<li>\\n<p><strong>x5t</strong>: 指定 X.509 证书的指纹，用于验证签名。这个字段是可选的。</p>\\n</li>\\n<li>\\n<p><strong>cty</strong>: 指定内容类型，通常用于嵌套 JWT。这个字段是可选的。</p>\\n</li>\\n</ol>","autoDesc":true}');export{c as comp,g as data};
